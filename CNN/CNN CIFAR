{"cells":[{"cell_type":"markdown","metadata":{"id":"yUaU31blS68J"},"source":["#1. Set up Google Drive"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"suVnBfenS26c","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678567085830,"user_tz":480,"elapsed":25628,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"18f04139-165a-43d0-c185-10c65fbb8a78"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n","/content/gdrive/.shortcut-targets-by-id/1Fl8lRtFtcplDqGhTruxlsGlVDZByXON0/NN_DL/CNN\n","/content/gdrive/.shortcut-targets-by-id/1Fl8lRtFtcplDqGhTruxlsGlVDZByXON0/NN_DL/CNN\n","data  file.txt\tGFG  resnet_adam.pt  resnet_sgdnest.pt\n"]}],"source":["import os\n","try:\n","    \n","    from google.colab import drive\n","    drive.mount('/content/gdrive')\n","\n","    DRIVE_PATH = '/content/gdrive/My\\ Drive/NN_DL/CNN' # Sim's path\n","    #DRIVE_PATH = '/content/gdrive/My\\ Drive/UCLA/NN_DL/GANS' # Ran's paths\n","    DRIVE_PYTHON_PATH = DRIVE_PATH.replace('\\\\', '')\n","    if not os.path.exists(DRIVE_PYTHON_PATH):\n","      %mkdir $DRIVE_PATH\n","\n","    ## the space in `My Drive` causes some issues,\n","    ## make a symlink to avoid this\n","    SYM_PATH = '/content/CNN'\n","    if not os.path.exists(SYM_PATH):\n","      !ln -s $DRIVE_PATH $SYM_PATH\n","    \n","    running_in_colab = True\n","    \n","    # We already mounted in our google drive.\n","    # Enter the foler where you put files in:\n","    %cd '/content/CNN'\n","\n","    # Current working directory:\n","    !pwd\n","\n","    # What files are there:\n","    !ls\n","   \n","    \n","except ModuleNotFoundError:\n","    running_in_colab = False\n","    print(\n","        \"I guess you are running locally. If you get this message in Colab, check the files.\"\n","    )"]},{"cell_type":"code","source":["%pwd"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":35},"id":"gXh1OScaOJ22","executionInfo":{"status":"ok","timestamp":1678567085830,"user_tz":480,"elapsed":6,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"0434284e-d3cd-4d25-f52d-af797eb31c5e"},"execution_count":2,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/content/gdrive/.shortcut-targets-by-id/1Fl8lRtFtcplDqGhTruxlsGlVDZByXON0/NN_DL/CNN'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":2}]},{"cell_type":"code","execution_count":1,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":4148,"status":"ok","timestamp":1678867157235,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":420},"id":"1vbrnVHU9FfZ","outputId":"ace1b288-a183-4b03-c2ba-e6d51269f106"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: torchsummary in /usr/local/lib/python3.9/dist-packages (1.5.1)\n"]}],"source":["!pip install torchsummary\n"]},{"cell_type":"code","source":["from time import sleep\n","!pip install progress\n","from progress.bar import Bar"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"BVr3Li1F3wAy","executionInfo":{"status":"ok","timestamp":1678867162211,"user_tz":420,"elapsed":4990,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"09c968f8-ff33-40b1-f639-95c458ffabb6"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting progress\n","  Downloading progress-1.6.tar.gz (7.8 kB)\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Building wheels for collected packages: progress\n","  Building wheel for progress (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for progress: filename=progress-1.6-py3-none-any.whl size=9630 sha256=c86fc5d17dd0a34d91ff5fcd8427b45970068050eb60a362067761920388cdb8\n","  Stored in directory: /root/.cache/pip/wheels/4c/9b/0a/a78ff56725af3ef70792f9ed0f8dbbc4c0315edc62cbc4a6b8\n","Successfully built progress\n","Installing collected packages: progress\n","Successfully installed progress-1.6\n"]}]},{"cell_type":"code","source":["import progressbar\n"],"metadata":{"id":"obrfstwA7N6u","executionInfo":{"status":"ok","timestamp":1678867162211,"user_tz":420,"elapsed":8,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"execution_count":3,"outputs":[]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":3818,"status":"ok","timestamp":1678867166023,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":420},"id":"PgcasvQJnoDM","outputId":"2bc75769-6117-4c1c-cf87-2ba1bb5bfc61"},"outputs":[{"output_type":"stream","name":"stdout","text":["cuda\n"]}],"source":["import torch \n","import torch.nn as nn\n","import torch.nn.functional as F #activation functions\n","from torch.optim import SGD\n","import seaborn as sns\n","import matplotlib.pyplot as plt \n","# Importing Libraries\n","import torch\n","import torchvision\n","import torchvision.transforms as transforms\n","from torchsummary import summary\n","import torch.nn as nn\n","import torch.nn.functional as F\n","import torch.optim as optim\n","from torch.optim.lr_scheduler import StepLR, ReduceLROnPlateau\n","\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","\n","device = \"cuda\" if torch.cuda.is_available else \"cpu\"\n","print(device)"]},{"cell_type":"markdown","metadata":{"id":"BPSSO72sWvXG"},"source":["#2. Import libraries and dataset"]},{"cell_type":"markdown","source":["#### Source: https://gist.github.com/kevinzakka/d33bf8d6c7f06a9d8c76d97a7879f5cb"],"metadata":{"id":"s5C5Eikixnir"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","\n","label_names = [\n","    'airplane',\n","    'automobile',\n","    'bird',\n","    'cat',\n","    'deer',\n","    'dog',\n","    'frog',\n","    'horse',\n","    'ship',\n","    'truck'\n","]\n","\n","\n","def plot_images(images, cls_true, cls_pred=None):\n","    \"\"\"\n","    Adapted from https://github.com/Hvass-Labs/TensorFlow-Tutorials/\n","    \"\"\"\n","    fig, axes = plt.subplots(3, 3)\n","\n","    for i, ax in enumerate(axes.flat):\n","        # plot img\n","        ax.imshow(images[i, :, :, :], interpolation='spline16')\n","\n","        # show true & predicted classes\n","        cls_true_name = label_names[cls_true[i]]\n","        if cls_pred is None:\n","            xlabel = \"{0} ({1})\".format(cls_true_name, cls_true[i])\n","        else:\n","            cls_pred_name = label_names[cls_pred[i]]\n","            xlabel = \"True: {0}\\nPred: {1}\".format(\n","                cls_true_name, cls_pred_name\n","            )\n","        ax.set_xlabel(xlabel)\n","        ax.set_xticks([])\n","        ax.set_yticks([])\n","\n","    plt.show()"],"metadata":{"id":"v1fFCz5jz34A","executionInfo":{"status":"ok","timestamp":1678867166220,"user_tz":420,"elapsed":202,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["import torch\n","import numpy as np\n","\n","from torchvision import datasets\n","from torchvision import transforms\n","from torch.utils.data.sampler import SubsetRandomSampler\n","\n","\n","def get_train_valid_loader(data_dir,\n","                           batch_size,\n","                           augment,\n","                           random_seed,\n","                           valid_size=0.1,\n","                           shuffle=True,\n","                           show_sample=False,\n","                           num_workers=4,\n","                           pin_memory=False):\n","    \"\"\"\n","    Utility function for loading and returning train and valid\n","    multi-process iterators over the CIFAR-10 dataset. A sample\n","    9x9 grid of the images can be optionally displayed.\n","    If using CUDA, num_workers should be set to 1 and pin_memory to True.\n","    Params\n","    ------\n","    - data_dir: path directory to the dataset.\n","    - batch_size: how many samples per batch to load.\n","    - augment: whether to apply the data augmentation scheme\n","      mentioned in the paper. Only applied on the train split.\n","    - random_seed: fix seed for reproducibility.\n","    - valid_size: percentage split of the training set used for\n","      the validation set. Should be a float in the range [0, 1].\n","    - shuffle: whether to shuffle the train/validation indices.\n","    - show_sample: plot 9x9 sample grid of the dataset.\n","    - num_workers: number of subprocesses to use when loading the dataset.\n","    - pin_memory: whether to copy tensors into CUDA pinned memory. Set it to\n","      True if using GPU.\n","    Returns\n","    -------\n","    - train_loader: training set iterator.\n","    - valid_loader: validation set iterator.\n","    \"\"\"\n","    error_msg = \"[!] valid_size should be in the range [0, 1].\"\n","    assert ((valid_size >= 0) and (valid_size <= 1)), error_msg\n","\n","    normalize = transforms.Normalize(\n","        mean=[0.4914, 0.4822, 0.4465],\n","        std=[0.2023, 0.1994, 0.2010],\n","    )\n","\n","    # define transforms\n","    valid_transform = transforms.Compose([\n","            transforms.ToTensor(),\n","            normalize,\n","    ])\n","    if augment:\n","        train_transform = transforms.Compose([\n","            transforms.RandomCrop(32, padding=4),\n","            transforms.RandomHorizontalFlip(),\n","            transforms.ToTensor(),\n","            normalize,\n","        ])\n","    else:\n","        train_transform = transforms.Compose([\n","            transforms.ToTensor(),\n","            normalize,\n","        ])\n","\n","    # load the dataset\n","    train_dataset = datasets.CIFAR10(\n","        root=data_dir, train=True,\n","        download=True, transform=train_transform,\n","    )\n","\n","    valid_dataset = datasets.CIFAR10(\n","        root=data_dir, train=True,\n","        download=True, transform=valid_transform,\n","    )\n","\n","    num_train = len(train_dataset)\n","    indices = list(range(num_train))\n","    split = int(np.floor(valid_size * num_train))\n","\n","    if shuffle:\n","        np.random.seed(random_seed)\n","        np.random.shuffle(indices)\n","\n","    train_idx, valid_idx = indices[split:], indices[:split]\n","    train_sampler = SubsetRandomSampler(train_idx)\n","    valid_sampler = SubsetRandomSampler(valid_idx)\n","\n","    train_loader = torch.utils.data.DataLoader(\n","        train_dataset, batch_size=batch_size, sampler=train_sampler,\n","        num_workers=num_workers, pin_memory=pin_memory,\n","    )\n","    valid_loader = torch.utils.data.DataLoader(\n","        valid_dataset, batch_size=batch_size, sampler=valid_sampler,\n","        num_workers=num_workers, pin_memory=pin_memory,\n","    )\n","\n","    # visualize some images\n","    if show_sample:\n","        sample_loader = torch.utils.data.DataLoader(\n","            train_dataset, batch_size=9, shuffle=shuffle,\n","            num_workers=num_workers, pin_memory=pin_memory,\n","        )\n","        data_iter = iter(sample_loader)\n","        images, labels = next(data_iter)\n","        X = images.numpy().transpose([0, 2, 3, 1])\n","        plot_images(X, labels)\n","\n","    return (train_loader, valid_loader)\n","\n","\n","def get_test_loader(data_dir,\n","                    batch_size,\n","                    shuffle=True,\n","                    num_workers=4,\n","                    pin_memory=False):\n","    \"\"\"\n","    Utility function for loading and returning a multi-process\n","    test iterator over the CIFAR-10 dataset.\n","    If using CUDA, num_workers should be set to 1 and pin_memory to True.\n","    Params\n","    ------\n","    - data_dir: path directory to the dataset.\n","    - batch_size: how many samples per batch to load.\n","    - shuffle: whether to shuffle the dataset after every epoch.\n","    - num_workers: number of subprocesses to use when loading the dataset.\n","    - pin_memory: whether to copy tensors into CUDA pinned memory. Set it to\n","      True if using GPU.\n","    Returns\n","    -------\n","    - data_loader: test set iterator.\n","    \"\"\"\n","    normalize = transforms.Normalize(\n","        mean=[0.485, 0.456, 0.406],\n","        std=[0.229, 0.224, 0.225],\n","    )\n","\n","    # define transform\n","    transform = transforms.Compose([\n","        transforms.ToTensor(),\n","        normalize,\n","    ])\n","\n","    dataset = datasets.CIFAR10(\n","        root=data_dir, train=False,\n","        download=True, transform=transform,\n","    )\n","\n","    data_loader = torch.utils.data.DataLoader(\n","        dataset, batch_size=batch_size, shuffle=shuffle,\n","        num_workers=num_workers, pin_memory=pin_memory,\n","    )\n","\n","    return data_loader"],"metadata":{"id":"mWP9_Cifwg6i","executionInfo":{"status":"ok","timestamp":1678867166221,"user_tz":420,"elapsed":8,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["trainloader,validloader = get_train_valid_loader(data_dir='./data',\n","                           batch_size=4,\n","                           augment=False,\n","                           random_seed=0,\n","                           valid_size=0.1,\n","                           shuffle=True,\n","                           show_sample=True,\n","                           num_workers=2,\n","                           pin_memory=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":532,"referenced_widgets":["3640e8431d1b4fb38193e7e0e015743f","ca6ccb8f1b2b4541a2788b3b7ef32576","b66e8e4ed3b046fabbeb115f9fdc2ca1","94ecf0d688534293ab3ab891413b23b1","47e229bc22824de18e1e77bc56402c27","027b68ca64a1466cbd50dd19840bd900","aba30421fc9247da874cf71675c7c81f","ca1cf853fa1145fcbe550cf91f0474b7","588c91c5dda846009f6c2a5828f267d7","f1bf6c5a4e65436096ff34a255f95c4a","899fb441b2cc4d51bb5428a1ebf543fd"]},"id":"BNVLoJX600hc","executionInfo":{"status":"ok","timestamp":1678867179132,"user_tz":420,"elapsed":12919,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"a533c204-d22e-4d09-cecd-fe3ad6e1f056"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Downloading https://www.cs.toronto.edu/~kriz/cifar-10-python.tar.gz to ./data/cifar-10-python.tar.gz\n"]},{"output_type":"display_data","data":{"text/plain":["  0%|          | 0/170498071 [00:00<?, ?it/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"3640e8431d1b4fb38193e7e0e015743f"}},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Extracting ./data/cifar-10-python.tar.gz to ./data\n","Files already downloaded and verified\n"]},{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.image:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n","WARNING:matplotlib.image:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n","WARNING:matplotlib.image:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n","WARNING:matplotlib.image:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n","WARNING:matplotlib.image:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n","WARNING:matplotlib.image:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n","WARNING:matplotlib.image:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n","WARNING:matplotlib.image:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n","WARNING:matplotlib.image:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 9 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"code","source":["testloader = get_test_loader(data_dir='./data',\n","                    batch_size=4,\n","                    shuffle=True,\n","                    num_workers=2,\n","                    pin_memory=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jrhMBPSc1Zcd","executionInfo":{"status":"ok","timestamp":1678867179310,"user_tz":420,"elapsed":194,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"fac99fa1-a4d6-433a-9fb5-feab7bb9c019"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["Files already downloaded and verified\n"]}]},{"cell_type":"code","execution_count":9,"metadata":{"executionInfo":{"elapsed":6,"status":"ok","timestamp":1678867179310,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":420},"id":"nCE35PtmF53V"},"outputs":[],"source":["import torch\n","import torchvision\n","import torchvision.transforms as transforms\n","\n","transform = transforms.Compose(\n","    [transforms.ToTensor(),\n","     transforms.Normalize((0.5, 0.5, 0.5), (0.5, 0.5, 0.5))])\n","\n","\n","#compose normalisations and pipelines\n","# load test set and train set\n","# trainset = torchvision.datasets.CIFAR10(root='./data', train=True,\n","#                                         download=True, transform=transform)\n","# trainloader = torch.utils.data.DataLoader(trainset, batch_size=4,\n","#                                           shuffle=True, num_workers=2)\n","# testset = torchvision.datasets.CIFAR10(root='./data', train=False,\n","#                                        download=True, transform=transform)\n","# testloader = torch.utils.data.DataLoader(testset, batch_size=4,\n","#                                          shuffle=False, num_workers=2)\n","\n","classes = ('plane', 'car', 'bird', 'cat',\n","           'deer', 'dog', 'frog', 'horse', 'ship', 'truck')"]},{"cell_type":"markdown","source":["#2. Utils"],"metadata":{"id":"R_VqG1HFvkmn"}},{"cell_type":"code","execution_count":10,"metadata":{"executionInfo":{"elapsed":5,"status":"ok","timestamp":1678867179310,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":420},"id":"Z5y5HSjrV7gO"},"outputs":[],"source":["#cuda utils\n","def get_default_device():\n","    \"\"\"Pick GPU if available, else CPU\"\"\"\n","    if torch.cuda.is_available():\n","        return torch.device('cuda')\n","    else:\n","        return torch.device('cpu')\n","    \n","def to_device(data, device):\n","    \"\"\"Move tensor(s) to chosen device\"\"\"\n","    if isinstance(data, (list,tuple)):\n","        return [to_device(x, device) for x in data]\n","    return data.to(device, non_blocking=True)\n","\n","def save_checkpoint(model,filept,loss_list,lossf):\n","  torch.save(model.state_dict(),filept) #f is something like 'resnet_nest_flood_bpoint15.pt'\n","  with open(lossf, \"w\") as output: #lossf is like \"file_flood_nest.txt\"\n","    output.write(str(loss_list))\n","\n"]},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":194},"executionInfo":{"elapsed":346,"status":"ok","timestamp":1678867179651,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":420},"id":"OJ2npuCWHD0V","outputId":"96914f1c-2f25-41cd-a217-4affb66f8a38"},"outputs":[{"output_type":"stream","name":"stderr","text":["WARNING:matplotlib.image:Clipping input data to the valid range for imshow with RGB data ([0..1] for floats or [0..255] for integers).\n"]},{"output_type":"stream","name":"stdout","text":[" deer  deer  bird horse\n"]},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"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\n"},"metadata":{"needs_background":"light"}}],"source":["import matplotlib.pyplot as plt\n","import numpy as np\n","\n","# functions to show an image\n","\n","\n","def imshow(img):\n","    img = img / 2 + 0.5     # unnormalize\n","    npimg = img.numpy()     # convert to numpy\n","    plt.imshow(np.transpose(npimg, (1, 2, 0)))\n","\n","\n","# get some random training images\n","dataiter = iter(trainloader)\n","images, labels = next(dataiter) #.next()\n","\n","# show images\n","imshow(torchvision.utils.make_grid(images))\n","# print labels\n","print(' '.join('%5s' % classes[labels[j]] for j in range(4))) #lists out the labels as defined in classes list"]},{"cell_type":"markdown","metadata":{"id":"OllvllBZ_OaT"},"source":["# Working with ResNet-20 for CIFAR-10"]},{"cell_type":"markdown","source":["Reference: https://github.com/chenyaofo/pytorch-cifar-models"],"metadata":{"id":"MBbx0c412kCY"}},{"cell_type":"code","execution_count":62,"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["367e46ebe93a4dfc9ab13841505b6954","c868bd0afae94ab9ad283d09b5d28f7d","6362e206f2064e309bcb65b35b082ae4","277cda53218f44e2b1ee23379f8d6c72","53da0e3159964380828dbfade11ce928","2d3faf9fe94d4fdcb9828e9f16b0ce8e","d0ba77f6996a48b995e3c0e2988ca697","806b6c3cd6764c17a1c3da8df8f62cd2","d2d56099881d4a5db612c9f0f8894b86","f30c04f5ce5a43c88c08b178f81de9aa","b01f49faeae14daabf8c507e0758a0a4"]},"executionInfo":{"elapsed":1785,"status":"ok","timestamp":1678783714238,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":420},"id":"H8sf-oK5TuPi","outputId":"8fa08758-e974-4be7-f6e9-bb0f5956eab3"},"outputs":[{"output_type":"stream","name":"stderr","text":["Using cache found in /root/.cache/torch/hub/chenyaofo_pytorch-cifar-models_master\n","Downloading: \"https://github.com/chenyaofo/pytorch-cifar-models/releases/download/resnet/cifar10_resnet20-4118986f.pt\" to /root/.cache/torch/hub/checkpoints/cifar10_resnet20-4118986f.pt\n"]},{"output_type":"display_data","data":{"text/plain":["  0%|          | 0.00/1.09M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"367e46ebe93a4dfc9ab13841505b6954"}},"metadata":{}},{"output_type":"execute_result","data":{"text/plain":["CifarResNet(\n","  (conv1): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","  (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","  (relu): ReLU(inplace=True)\n","  (layer1): Sequential(\n","    (0): BasicBlock(\n","      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    )\n","    (1): BasicBlock(\n","      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    )\n","    (2): BasicBlock(\n","      (conv1): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv2): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(16, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    )\n","  )\n","  (layer2): Sequential(\n","    (0): BasicBlock(\n","      (conv1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (downsample): Sequential(\n","        (0): Conv2d(16, 32, kernel_size=(1, 1), stride=(2, 2), bias=False)\n","        (1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      )\n","    )\n","    (1): BasicBlock(\n","      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    )\n","    (2): BasicBlock(\n","      (conv1): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(32, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    )\n","  )\n","  (layer3): Sequential(\n","    (0): BasicBlock(\n","      (conv1): Conv2d(32, 64, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (downsample): Sequential(\n","        (0): Conv2d(32, 64, kernel_size=(1, 1), stride=(2, 2), bias=False)\n","        (1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      )\n","    )\n","    (1): BasicBlock(\n","      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    )\n","    (2): BasicBlock(\n","      (conv1): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn1): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","      (relu): ReLU(inplace=True)\n","      (conv2): Conv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)\n","      (bn2): BatchNorm2d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)\n","    )\n","  )\n","  (avgpool): AdaptiveAvgPool2d(output_size=(1, 1))\n","  (fc): Linear(in_features=64, out_features=10, bias=True)\n",")"]},"metadata":{},"execution_count":62}],"source":["# model = torch.hub.load('pytorch/vision:v0.10.0', 'resnet18', pretrained=False)\n","# model.eval()\n","model_pretrained = torch.hub.load(\"chenyaofo/pytorch-cifar-models\", \"cifar10_resnet20\", pretrained=True, trust_repo=True)\n","model_pretrained.eval()"]},{"cell_type":"markdown","source":["#3. Testing pretrained performance"],"metadata":{"id":"YNFciUvW2txv"}},{"cell_type":"code","execution_count":11,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":7,"status":"ok","timestamp":1678765793820,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":420},"id":"TuQbkZZ2HLXp","outputId":"b56d0208-69cf-445e-dd98-ebb11d64a026"},"outputs":[{"output_type":"stream","name":"stdout","text":["cuda:0\n"]}],"source":["device = torch.device(\"cuda:0\" if torch.cuda.is_available() else \"cpu\")\n","\n","# Assume that we are on a CUDA machine, then this should print a CUDA device:\n","\n","print(device)"]},{"cell_type":"code","source":["bar = progressbar.ProgressBar(maxval=20, \\\n","    widgets=[progressbar.Bar('=', '[', ']'), ' ', progressbar.Percentage()])\n","bar.start()\n","for i in range(20):\n","    bar.update(i+1)\n","    sleep(0.1)\n","bar.finish()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hOYGSknn3sRv","executionInfo":{"status":"ok","timestamp":1678760584605,"user_tz":420,"elapsed":1898,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"802750ad-f9be-4582-947c-d5f4c727e0d8"},"execution_count":43,"outputs":[{"output_type":"stream","name":"stderr","text":["[========================================================================] 100%\n"]}]},{"cell_type":"code","source":["len(trainloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"L9y-xAVo8Fgb","executionInfo":{"status":"ok","timestamp":1678760772400,"user_tz":420,"elapsed":3,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"3ed78919-9ad9-4862-a08f-12564ceddb6f"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["11250"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","execution_count":12,"metadata":{"id":"d3WuL7sQWoBv","executionInfo":{"status":"ok","timestamp":1678867181421,"user_tz":420,"elapsed":2,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"outputs":[],"source":["from progress.bar import IncrementalBar\n","\n","def predict_accuracy(model,trainloader):\n","  bar = IncrementalBar('Countdown', max = len(trainloader))\n","  correct = 0\n","  total = 0\n","  with torch.no_grad(): #no grad so that we don't change the weights\n","    for data in trainloader:\n","      bar.next()\n","      #sleep(1)\n","      images, labels = data\n","      outputs = model(images)\n","      _, predicted = torch.max(outputs.data, 1)\n","      total += labels.size(0)\n","      correct += (predicted == labels).sum().item()\n","    bar.finish()\n","\n","  print('Accuracy of the network on the 12500 training images: %d %%' % (\n","      100 * correct / total))\n","  return (correct,total,correct/total)\n"]},{"cell_type":"code","source":["predict_accuracy(model_pretrained,trainloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yGxrKaIXPVtZ","executionInfo":{"status":"ok","timestamp":1678761130248,"user_tz":420,"elapsed":77927,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"86f8ed3b-db0e-4ea8-ac77-96d1c77f8479"},"execution_count":55,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of the network on the 12500 training images: 99 %\n"]},{"output_type":"execute_result","data":{"text/plain":["(44976, 45000, 0.9994666666666666)"]},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["# model_pretrained"],"metadata":{"id":"llCCAn0wTjai","executionInfo":{"status":"ok","timestamp":1678783725060,"user_tz":420,"elapsed":322,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"execution_count":64,"outputs":[]},{"cell_type":"code","source":["predict_accuracy(model_pretrained,validloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"FJcwyuwGHmoq","executionInfo":{"status":"ok","timestamp":1678783759174,"user_tz":420,"elapsed":8714,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"46fc2ac0-ab74-42cd-d387-2f5d51e9887b"},"execution_count":66,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of the network on the 12500 training images: 99 %\n"]},{"output_type":"execute_result","data":{"text/plain":["(4997, 5000, 0.9994)"]},"metadata":{},"execution_count":66}]},{"cell_type":"code","source":["predict_accuracy(model_pretrained,testloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JN43b3idHt-u","executionInfo":{"status":"ok","timestamp":1678783750466,"user_tz":420,"elapsed":17504,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"fd2b9cd6-ea1e-48cc-8f83-e81ce668dbee"},"execution_count":65,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of the network on the 12500 training images: 92 %\n"]},{"output_type":"execute_result","data":{"text/plain":["(9222, 10000, 0.9222)"]},"metadata":{},"execution_count":65}]},{"cell_type":"markdown","source":["#4. Training natively"],"metadata":{"id":"9x2CW6mc2-0R"}},{"cell_type":"code","source":["model=torch.hub.load(\"chenyaofo/pytorch-cifar-models\", \"cifar10_resnet20\", pretrained=False, trust_repo=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tY4IaI1c8WKr","executionInfo":{"status":"ok","timestamp":1678867192376,"user_tz":420,"elapsed":458,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"6b1c57bf-ea9a-4594-ce80-021ce4045307"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stderr","text":["Downloading: \"https://github.com/chenyaofo/pytorch-cifar-models/zipball/master\" to /root/.cache/torch/hub/master.zip\n"]}]},{"cell_type":"markdown","source":["## Just training Resnet-20 using Adam and then building performance from there."],"metadata":{"id":"Dd-WcCBO8ohW"}},{"cell_type":"code","source":[],"metadata":{"id":"qFM1k_fP8m5a","executionInfo":{"status":"ok","timestamp":1678867194115,"user_tz":420,"elapsed":7,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","execution_count":14,"metadata":{"executionInfo":{"elapsed":3,"status":"ok","timestamp":1678867194624,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":420},"id":"DHn6UzX1_eZ4"},"outputs":[],"source":["import torch.optim as optim\n","\n","criterion = nn.CrossEntropyLoss()\n","optimizer = optim.Adam(model.parameters(), lr=0.001)"]},{"cell_type":"code","execution_count":15,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"njInrfXM_eXm","executionInfo":{"status":"ok","timestamp":1678870690178,"user_tz":420,"elapsed":859096,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"dc5e8be3-9645-4507-b723-dac8a94c2602"},"outputs":[{"output_type":"stream","name":"stdout","text":["[1,   200] loss: 2.144\n","[1,   400] loss: 2.068\n","[1,   600] loss: 2.001\n","[1,   800] loss: 1.957\n","[1,  1000] loss: 1.961\n","[1,  1200] loss: 1.914\n","[1,  1400] loss: 1.863\n","[1,  1600] loss: 1.895\n","[1,  1800] loss: 1.811\n","[1,  2000] loss: 1.817\n","[1,  2200] loss: 1.755\n","[1,  2400] loss: 1.750\n","[1,  2600] loss: 1.739\n","[1,  2800] loss: 1.683\n","[1,  3000] loss: 1.657\n","[1,  3200] loss: 1.684\n","[1,  3400] loss: 1.633\n","[1,  3600] loss: 1.664\n","[1,  3800] loss: 1.578\n","[1,  4000] loss: 1.583\n","[1,  4200] loss: 1.513\n","[1,  4400] loss: 1.642\n","[1,  4600] loss: 1.515\n","[1,  4800] loss: 1.498\n","[1,  5000] loss: 1.559\n","[1,  5200] loss: 1.577\n","[1,  5400] loss: 1.453\n","[1,  5600] loss: 1.494\n","[1,  5800] loss: 1.434\n","[1,  6000] loss: 1.423\n","[1,  6200] loss: 1.462\n","[1,  6400] loss: 1.411\n","[1,  6600] loss: 1.336\n","[1,  6800] loss: 1.311\n","[1,  7000] loss: 1.385\n","[1,  7200] loss: 1.383\n","[1,  7400] loss: 1.416\n","[1,  7600] loss: 1.352\n","[1,  7800] loss: 1.326\n","[1,  8000] loss: 1.283\n","[1,  8200] loss: 1.307\n","[1,  8400] loss: 1.302\n","[1,  8600] loss: 1.329\n","[1,  8800] loss: 1.260\n","[1,  9000] loss: 1.268\n","[1,  9200] loss: 1.218\n","[1,  9400] loss: 1.303\n","[1,  9600] loss: 1.278\n","[1,  9800] loss: 1.228\n","[1, 10000] loss: 1.205\n","[1, 10200] loss: 1.275\n","[1, 10400] loss: 1.195\n","[1, 10600] loss: 1.254\n","[1, 10800] loss: 1.226\n","[1, 11000] loss: 1.174\n","[1, 11200] loss: 1.238\n","Accuracy of the network on the 12500 training images: 58 %\n","Accuracy of the network on the 12500 training images: 57 %\n","(Epoch 1 / 10) train acc: 0.582556; val_acc: 0.577200\n","[2,   200] loss: 1.130\n","[2,   400] loss: 1.195\n","[2,   600] loss: 1.131\n","[2,   800] loss: 1.096\n","[2,  1000] loss: 1.084\n","[2,  1200] loss: 1.140\n","[2,  1400] loss: 1.116\n","[2,  1600] loss: 1.099\n","[2,  1800] loss: 1.159\n","[2,  2000] loss: 1.107\n","[2,  2200] loss: 1.121\n","[2,  2400] loss: 1.071\n","[2,  2600] loss: 1.180\n","[2,  2800] loss: 1.111\n","[2,  3000] loss: 1.050\n","[2,  3200] loss: 1.079\n","[2,  3400] loss: 1.061\n","[2,  3600] loss: 1.083\n","[2,  3800] loss: 1.087\n","[2,  4000] loss: 1.023\n","[2,  4200] loss: 1.084\n","[2,  4400] loss: 1.088\n","[2,  4600] loss: 1.071\n","[2,  4800] loss: 1.078\n","[2,  5000] loss: 1.069\n","[2,  5200] loss: 1.036\n","[2,  5400] loss: 1.026\n","[2,  5600] loss: 1.047\n","[2,  5800] loss: 0.995\n","[2,  6000] loss: 0.941\n","[2,  6200] loss: 0.971\n","[2,  6400] loss: 1.001\n","[2,  6600] loss: 1.005\n","[2,  6800] loss: 1.021\n","[2,  7000] loss: 1.038\n","[2,  7200] loss: 1.036\n","[2,  7400] loss: 0.949\n","[2,  7600] loss: 0.941\n","[2,  7800] loss: 0.981\n","[2,  8000] loss: 0.968\n","[2,  8200] loss: 0.944\n","[2,  8400] loss: 0.969\n","[2,  8600] loss: 0.972\n","[2,  8800] loss: 1.033\n","[2,  9000] loss: 0.999\n","[2,  9200] loss: 1.039\n","[2,  9400] loss: 0.915\n","[2,  9600] loss: 1.062\n","[2,  9800] loss: 0.962\n","[2, 10000] loss: 0.973\n","[2, 10200] loss: 1.012\n","[2, 10400] loss: 0.938\n","[2, 10600] loss: 0.930\n","[2, 10800] loss: 0.918\n","[2, 11000] loss: 0.909\n","[2, 11200] loss: 0.953\n","Accuracy of the network on the 12500 training images: 69 %\n","Accuracy of the network on the 12500 training images: 68 %\n","(Epoch 2 / 10) train acc: 0.692400; val_acc: 0.683000\n","[3,   200] loss: 0.947\n","[3,   400] loss: 0.815\n","[3,   600] loss: 0.856\n","[3,   800] loss: 0.915\n","[3,  1000] loss: 0.905\n","[3,  1200] loss: 0.802\n","[3,  1400] loss: 0.927\n","[3,  1600] loss: 0.942\n","[3,  1800] loss: 0.844\n","[3,  2000] loss: 0.916\n","[3,  2200] loss: 0.820\n","[3,  2400] loss: 0.950\n","[3,  2600] loss: 0.883\n","[3,  2800] loss: 0.881\n","[3,  3000] loss: 0.877\n","[3,  3200] loss: 0.840\n","[3,  3400] loss: 0.811\n","[3,  3600] loss: 0.926\n","[3,  3800] loss: 0.843\n","[3,  4000] loss: 0.870\n","[3,  4200] loss: 0.787\n","[3,  4400] loss: 0.874\n","[3,  4600] loss: 0.901\n","[3,  4800] loss: 0.877\n","[3,  5000] loss: 0.860\n","[3,  5200] loss: 0.818\n","[3,  5400] loss: 0.798\n","[3,  5600] loss: 0.857\n","[3,  5800] loss: 0.829\n","[3,  6000] loss: 0.845\n","[3,  6200] loss: 0.834\n","[3,  6400] loss: 0.861\n","[3,  6600] loss: 0.913\n","[3,  6800] loss: 0.879\n","[3,  7000] loss: 0.798\n","[3,  7200] loss: 0.791\n","[3,  7400] loss: 0.796\n","[3,  7600] loss: 0.820\n","[3,  7800] loss: 0.752\n","[3,  8000] loss: 0.751\n","[3,  8200] loss: 0.785\n","[3,  8400] loss: 0.827\n","[3,  8600] loss: 0.823\n","[3,  8800] loss: 0.875\n","[3,  9000] loss: 0.828\n","[3,  9200] loss: 0.768\n","[3,  9400] loss: 0.751\n","[3,  9600] loss: 0.734\n","[3,  9800] loss: 0.823\n","[3, 10000] loss: 0.742\n","[3, 10200] loss: 0.837\n","[3, 10400] loss: 0.770\n","[3, 10600] loss: 0.821\n","[3, 10800] loss: 0.844\n","[3, 11000] loss: 0.795\n","[3, 11200] loss: 0.822\n","Accuracy of the network on the 12500 training images: 75 %\n","Accuracy of the network on the 12500 training images: 73 %\n","(Epoch 3 / 10) train acc: 0.756778; val_acc: 0.735800\n","[4,   200] loss: 0.680\n","[4,   400] loss: 0.727\n","[4,   600] loss: 0.741\n","[4,   800] loss: 0.748\n","[4,  1000] loss: 0.776\n","[4,  1200] loss: 0.719\n","[4,  1400] loss: 0.763\n","[4,  1600] loss: 0.725\n","[4,  1800] loss: 0.782\n","[4,  2000] loss: 0.722\n","[4,  2200] loss: 0.760\n","[4,  2400] loss: 0.752\n","[4,  2600] loss: 0.742\n","[4,  2800] loss: 0.728\n","[4,  3000] loss: 0.740\n","[4,  3200] loss: 0.714\n","[4,  3400] loss: 0.690\n","[4,  3600] loss: 0.726\n","[4,  3800] loss: 0.769\n","[4,  4000] loss: 0.736\n","[4,  4200] loss: 0.783\n","[4,  4400] loss: 0.741\n","[4,  4600] loss: 0.755\n","[4,  4800] loss: 0.778\n","[4,  5000] loss: 0.734\n","[4,  5200] loss: 0.712\n","[4,  5400] loss: 0.711\n","[4,  5600] loss: 0.756\n","[4,  5800] loss: 0.712\n","[4,  6000] loss: 0.734\n","[4,  6200] loss: 0.715\n","[4,  6400] loss: 0.692\n","[4,  6600] loss: 0.724\n","[4,  6800] loss: 0.725\n","[4,  7000] loss: 0.657\n","[4,  7200] loss: 0.746\n","[4,  7400] loss: 0.635\n","[4,  7600] loss: 0.732\n","[4,  7800] loss: 0.724\n","[4,  8000] loss: 0.751\n","[4,  8200] loss: 0.703\n","[4,  8400] loss: 0.693\n","[4,  8600] loss: 0.682\n","[4,  8800] loss: 0.625\n","[4,  9000] loss: 0.683\n","[4,  9200] loss: 0.678\n","[4,  9400] loss: 0.674\n","[4,  9600] loss: 0.657\n","[4,  9800] loss: 0.714\n","[4, 10000] loss: 0.711\n","[4, 10200] loss: 0.709\n","[4, 10400] loss: 0.701\n","[4, 10600] loss: 0.648\n","[4, 10800] loss: 0.659\n","[4, 11000] loss: 0.729\n","[4, 11200] loss: 0.631\n","Accuracy of the network on the 12500 training images: 78 %\n","Accuracy of the network on the 12500 training images: 75 %\n","(Epoch 4 / 10) train acc: 0.781089; val_acc: 0.751800\n","[5,   200] loss: 0.610\n","[5,   400] loss: 0.580\n","[5,   600] loss: 0.599\n","[5,   800] loss: 0.669\n","[5,  1000] loss: 0.629\n","[5,  1200] loss: 0.531\n","[5,  1400] loss: 0.642\n","[5,  1600] loss: 0.627\n","[5,  1800] loss: 0.633\n","[5,  2000] loss: 0.656\n","[5,  2200] loss: 0.641\n","[5,  2400] loss: 0.673\n","[5,  2600] loss: 0.646\n","[5,  2800] loss: 0.626\n","[5,  3000] loss: 0.637\n","[5,  3200] loss: 0.658\n","[5,  3400] loss: 0.649\n","[5,  3600] loss: 0.675\n","[5,  3800] loss: 0.652\n","[5,  4000] loss: 0.621\n","[5,  4200] loss: 0.673\n","[5,  4400] loss: 0.620\n","[5,  4600] loss: 0.603\n","[5,  4800] loss: 0.611\n","[5,  5000] loss: 0.636\n","[5,  5200] loss: 0.643\n","[5,  5400] loss: 0.569\n","[5,  5600] loss: 0.672\n","[5,  5800] loss: 0.613\n","[5,  6000] loss: 0.642\n","[5,  6200] loss: 0.680\n","[5,  6400] loss: 0.663\n","[5,  6600] loss: 0.589\n","[5,  6800] loss: 0.622\n","[5,  7000] loss: 0.663\n","[5,  7200] loss: 0.673\n","[5,  7400] loss: 0.600\n","[5,  7600] loss: 0.571\n","[5,  7800] loss: 0.569\n","[5,  8000] loss: 0.594\n","[5,  8200] loss: 0.699\n","[5,  8400] loss: 0.641\n","[5,  8600] loss: 0.691\n","[5,  8800] loss: 0.639\n","[5,  9000] loss: 0.661\n","[5,  9200] loss: 0.613\n","[5,  9400] loss: 0.564\n","[5,  9600] loss: 0.616\n","[5,  9800] loss: 0.659\n","[5, 10000] loss: 0.581\n","[5, 10200] loss: 0.601\n","[5, 10400] loss: 0.559\n","[5, 10600] loss: 0.584\n","[5, 10800] loss: 0.626\n","[5, 11000] loss: 0.592\n","[5, 11200] loss: 0.651\n","Accuracy of the network on the 12500 training images: 80 %\n","Accuracy of the network on the 12500 training images: 76 %\n","(Epoch 5 / 10) train acc: 0.803333; val_acc: 0.761200\n","[6,   200] loss: 0.556\n","[6,   400] loss: 0.554\n","[6,   600] loss: 0.563\n","[6,   800] loss: 0.591\n","[6,  1000] loss: 0.546\n","[6,  1200] loss: 0.553\n","[6,  1400] loss: 0.601\n","[6,  1600] loss: 0.610\n","[6,  1800] loss: 0.584\n","[6,  2000] loss: 0.518\n","[6,  2200] loss: 0.543\n","[6,  2400] loss: 0.608\n","[6,  2600] loss: 0.609\n","[6,  2800] loss: 0.607\n","[6,  3000] loss: 0.536\n","[6,  3200] loss: 0.583\n","[6,  3400] loss: 0.532\n","[6,  3600] loss: 0.586\n","[6,  3800] loss: 0.515\n","[6,  4000] loss: 0.572\n","[6,  4200] loss: 0.509\n","[6,  4400] loss: 0.593\n","[6,  4600] loss: 0.575\n","[6,  4800] loss: 0.578\n","[6,  5000] loss: 0.565\n","[6,  5200] loss: 0.537\n","[6,  5400] loss: 0.561\n","[6,  5600] loss: 0.580\n","[6,  5800] loss: 0.581\n","[6,  6000] loss: 0.606\n","[6,  6200] loss: 0.541\n","[6,  6400] loss: 0.578\n","[6,  6600] loss: 0.554\n","[6,  6800] loss: 0.616\n","[6,  7000] loss: 0.558\n","[6,  7200] loss: 0.566\n","[6,  7400] loss: 0.571\n","[6,  7600] loss: 0.552\n","[6,  7800] loss: 0.576\n","[6,  8000] loss: 0.534\n","[6,  8200] loss: 0.561\n","[6,  8400] loss: 0.611\n","[6,  8600] loss: 0.537\n","[6,  8800] loss: 0.512\n","[6,  9000] loss: 0.511\n","[6,  9200] loss: 0.570\n","[6,  9400] loss: 0.579\n","[6,  9600] loss: 0.527\n","[6,  9800] loss: 0.636\n","[6, 10000] loss: 0.572\n","[6, 10200] loss: 0.538\n","[6, 10400] loss: 0.608\n","[6, 10600] loss: 0.558\n","[6, 10800] loss: 0.536\n","[6, 11000] loss: 0.546\n","[6, 11200] loss: 0.548\n","Accuracy of the network on the 12500 training images: 82 %\n","Accuracy of the network on the 12500 training images: 76 %\n","(Epoch 6 / 10) train acc: 0.825578; val_acc: 0.765000\n","[7,   200] loss: 0.518\n","[7,   400] loss: 0.474\n","[7,   600] loss: 0.465\n","[7,   800] loss: 0.442\n","[7,  1000] loss: 0.516\n","[7,  1200] loss: 0.472\n","[7,  1400] loss: 0.474\n","[7,  1600] loss: 0.479\n","[7,  1800] loss: 0.522\n","[7,  2000] loss: 0.491\n","[7,  2200] loss: 0.557\n","[7,  2400] loss: 0.524\n","[7,  2600] loss: 0.428\n","[7,  2800] loss: 0.459\n","[7,  3000] loss: 0.545\n","[7,  3200] loss: 0.437\n","[7,  3400] loss: 0.539\n","[7,  3600] loss: 0.533\n","[7,  3800] loss: 0.555\n","[7,  4000] loss: 0.505\n","[7,  4200] loss: 0.511\n","[7,  4400] loss: 0.497\n","[7,  4600] loss: 0.500\n","[7,  4800] loss: 0.457\n","[7,  5000] loss: 0.440\n","[7,  5200] loss: 0.536\n","[7,  5400] loss: 0.541\n","[7,  5600] loss: 0.516\n","[7,  5800] loss: 0.478\n","[7,  6000] loss: 0.506\n","[7,  6200] loss: 0.515\n","[7,  6400] loss: 0.493\n","[7,  6600] loss: 0.457\n","[7,  6800] loss: 0.525\n","[7,  7000] loss: 0.491\n","[7,  7200] loss: 0.497\n","[7,  7400] loss: 0.482\n","[7,  7600] loss: 0.482\n","[7,  7800] loss: 0.566\n","[7,  8000] loss: 0.525\n","[7,  8200] loss: 0.488\n","[7,  8400] loss: 0.550\n","[7,  8600] loss: 0.538\n","[7,  8800] loss: 0.527\n","[7,  9000] loss: 0.524\n","[7,  9200] loss: 0.520\n","[7,  9400] loss: 0.569\n","[7,  9600] loss: 0.462\n","[7,  9800] loss: 0.492\n","[7, 10000] loss: 0.543\n","[7, 10200] loss: 0.519\n","[7, 10400] loss: 0.555\n","[7, 10600] loss: 0.491\n","[7, 10800] loss: 0.492\n","[7, 11000] loss: 0.509\n","[7, 11200] loss: 0.491\n","Accuracy of the network on the 12500 training images: 85 %\n","Accuracy of the network on the 12500 training images: 79 %\n","(Epoch 7 / 10) train acc: 0.857889; val_acc: 0.791400\n","[8,   200] loss: 0.367\n","[8,   400] loss: 0.486\n","[8,   600] loss: 0.415\n","[8,   800] loss: 0.463\n","[8,  1000] loss: 0.450\n","[8,  1200] loss: 0.392\n","[8,  1400] loss: 0.471\n","[8,  1600] loss: 0.465\n","[8,  1800] loss: 0.483\n","[8,  2000] loss: 0.462\n","[8,  2200] loss: 0.423\n","[8,  2400] loss: 0.466\n","[8,  2600] loss: 0.385\n","[8,  2800] loss: 0.433\n","[8,  3000] loss: 0.463\n","[8,  3200] loss: 0.424\n","[8,  3400] loss: 0.468\n","[8,  3600] loss: 0.489\n","[8,  3800] loss: 0.428\n","[8,  4000] loss: 0.460\n","[8,  4200] loss: 0.458\n","[8,  4400] loss: 0.406\n","[8,  4600] loss: 0.480\n","[8,  4800] loss: 0.502\n","[8,  5000] loss: 0.474\n","[8,  5200] loss: 0.465\n","[8,  5400] loss: 0.459\n","[8,  5600] loss: 0.455\n","[8,  5800] loss: 0.450\n","[8,  6000] loss: 0.458\n","[8,  6200] loss: 0.466\n","[8,  6400] loss: 0.414\n","[8,  6600] loss: 0.459\n","[8,  6800] loss: 0.467\n","[8,  7000] loss: 0.459\n","[8,  7200] loss: 0.403\n","[8,  7400] loss: 0.515\n","[8,  7600] loss: 0.387\n","[8,  7800] loss: 0.486\n","[8,  8000] loss: 0.489\n","[8,  8200] loss: 0.485\n","[8,  8400] loss: 0.506\n","[8,  8600] loss: 0.484\n","[8,  8800] loss: 0.394\n","[8,  9000] loss: 0.425\n","[8,  9200] loss: 0.467\n","[8,  9400] loss: 0.517\n","[8,  9600] loss: 0.468\n","[8,  9800] loss: 0.467\n","[8, 10000] loss: 0.454\n","[8, 10200] loss: 0.464\n","[8, 10400] loss: 0.480\n","[8, 10600] loss: 0.436\n","[8, 10800] loss: 0.509\n","[8, 11000] loss: 0.445\n","[8, 11200] loss: 0.465\n","Accuracy of the network on the 12500 training images: 86 %\n","Accuracy of the network on the 12500 training images: 79 %\n","(Epoch 8 / 10) train acc: 0.869800; val_acc: 0.799600\n","[9,   200] loss: 0.351\n","[9,   400] loss: 0.422\n","[9,   600] loss: 0.450\n","[9,   800] loss: 0.420\n","[9,  1000] loss: 0.385\n","[9,  1200] loss: 0.427\n","[9,  1400] loss: 0.376\n","[9,  1600] loss: 0.377\n","[9,  1800] loss: 0.375\n","[9,  2000] loss: 0.369\n","[9,  2200] loss: 0.397\n","[9,  2400] loss: 0.395\n","[9,  2600] loss: 0.419\n","[9,  2800] loss: 0.436\n","[9,  3000] loss: 0.379\n","[9,  3200] loss: 0.392\n","[9,  3400] loss: 0.404\n","[9,  3600] loss: 0.414\n","[9,  3800] loss: 0.431\n","[9,  4000] loss: 0.430\n","[9,  4200] loss: 0.327\n","[9,  4400] loss: 0.461\n","[9,  4600] loss: 0.454\n","[9,  4800] loss: 0.466\n","[9,  5000] loss: 0.444\n","[9,  5200] loss: 0.412\n","[9,  5400] loss: 0.370\n","[9,  5600] loss: 0.382\n","[9,  5800] loss: 0.390\n","[9,  6000] loss: 0.414\n","[9,  6200] loss: 0.440\n","[9,  6400] loss: 0.425\n","[9,  6600] loss: 0.376\n","[9,  6800] loss: 0.398\n","[9,  7000] loss: 0.415\n","[9,  7200] loss: 0.479\n","[9,  7400] loss: 0.455\n","[9,  7600] loss: 0.402\n","[9,  7800] loss: 0.440\n","[9,  8000] loss: 0.477\n","[9,  8200] loss: 0.409\n","[9,  8400] loss: 0.439\n","[9,  8600] loss: 0.373\n","[9,  8800] loss: 0.465\n","[9,  9000] loss: 0.444\n","[9,  9200] loss: 0.421\n","[9,  9400] loss: 0.441\n","[9,  9600] loss: 0.457\n","[9,  9800] loss: 0.341\n","[9, 10000] loss: 0.429\n","[9, 10200] loss: 0.496\n","[9, 10400] loss: 0.454\n","[9, 10600] loss: 0.403\n","[9, 10800] loss: 0.409\n","[9, 11000] loss: 0.432\n","[9, 11200] loss: 0.442\n","Accuracy of the network on the 12500 training images: 87 %\n","Accuracy of the network on the 12500 training images: 79 %\n","(Epoch 9 / 10) train acc: 0.874333; val_acc: 0.797200\n","[10,   200] loss: 0.335\n","[10,   400] loss: 0.425\n","[10,   600] loss: 0.286\n","[10,   800] loss: 0.336\n","[10,  1000] loss: 0.356\n","[10,  1200] loss: 0.327\n","[10,  1400] loss: 0.324\n","[10,  1600] loss: 0.439\n","[10,  1800] loss: 0.400\n","[10,  2000] loss: 0.462\n","[10,  2200] loss: 0.358\n","[10,  2400] loss: 0.303\n","[10,  2600] loss: 0.357\n","[10,  2800] loss: 0.341\n","[10,  3000] loss: 0.391\n","[10,  3200] loss: 0.384\n","[10,  3400] loss: 0.357\n","[10,  3600] loss: 0.397\n","[10,  3800] loss: 0.367\n","[10,  4000] loss: 0.370\n","[10,  4200] loss: 0.385\n","[10,  4400] loss: 0.432\n","[10,  4600] loss: 0.321\n","[10,  4800] loss: 0.335\n","[10,  5000] loss: 0.367\n","[10,  5200] loss: 0.365\n","[10,  5400] loss: 0.367\n","[10,  5600] loss: 0.344\n","[10,  5800] loss: 0.389\n","[10,  6000] loss: 0.375\n","[10,  6200] loss: 0.418\n","[10,  6400] loss: 0.396\n","[10,  6600] loss: 0.378\n","[10,  6800] loss: 0.390\n","[10,  7000] loss: 0.368\n","[10,  7200] loss: 0.372\n","[10,  7400] loss: 0.370\n","[10,  7600] loss: 0.393\n","[10,  7800] loss: 0.349\n","[10,  8000] loss: 0.400\n","[10,  8200] loss: 0.403\n","[10,  8400] loss: 0.381\n","[10,  8600] loss: 0.364\n","[10,  8800] loss: 0.381\n","[10,  9000] loss: 0.390\n","[10,  9200] loss: 0.385\n","[10,  9400] loss: 0.340\n","[10,  9600] loss: 0.334\n","[10,  9800] loss: 0.384\n","[10, 10000] loss: 0.456\n","[10, 10200] loss: 0.353\n","[10, 10400] loss: 0.403\n","[10, 10600] loss: 0.368\n","[10, 10800] loss: 0.410\n","[10, 11000] loss: 0.409\n","[10, 11200] loss: 0.403\n","Accuracy of the network on the 12500 training images: 89 %\n","Accuracy of the network on the 12500 training images: 80 %\n","(Epoch 10 / 10) train acc: 0.890489; val_acc: 0.801400\n","Finished Training\n"]}],"source":["\n","loss_values = []\n","accuracies = []\n","val_accuracy = []\n","best_val_acc = 0\n","for epoch in range(10):  # loop over the dataset multiple times\n","    total =0\n","    correct = 0\n","\n","    running_loss = 0.0\n","    for i, data in enumerate(trainloader, 0):\n","        # get the inputs\n","        inputs, labels = data\n","\n","        # zero the parameter gradients\n","        optimizer.zero_grad()\n","\n","        # forward + backward + optimize\n","        outputs = model(inputs)\n","        loss = criterion(outputs, labels)\n","        loss.backward()\n","        optimizer.step()\n","\n","        # print statistics\n","        running_loss += loss.item()\n","        loss_values.append(loss.item())\n","        if i % 200 == 199:    # print every 200 mini-batches\n","            print('[%d, %5d] loss: %.3f' %\n","                  (epoch + 1, i + 1, running_loss / 200))\n","            running_loss = 0.0\n","    #caculate accuracy\n","    train_correct,train_total,train_acc = predict_accuracy(model,trainloader)\n","    ## calculate validation accuracy\n","    val_correct,val_total,val_acc = predict_accuracy(model,validloader)\n","    accuracies.append(train_acc)\n","    val_accuracy.append(val_acc)\n","\n","    print('(Epoch %d / %d) train acc: %f; val_acc: %f' % (epoch+1, 10, train_acc, val_acc))\n","\n","    #retain best parameters\n","    if val_acc > best_val_acc:\n","      best_val_acc = val_acc\n","      best_params = model.state_dict()\n","    \n","    \n","\n","print('Finished Training')"]},{"cell_type":"code","source":["weighted_params = [i for i in model.state_dict().keys() if 'weight' in i]"],"metadata":{"id":"7D92PGIij_ix","executionInfo":{"status":"ok","timestamp":1678872140466,"user_tz":420,"elapsed":134,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["weighted_params"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dka1tVEDk-gp","executionInfo":{"status":"ok","timestamp":1678872148973,"user_tz":420,"elapsed":122,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"abbd2578-47ed-4cb0-f69c-a974a952f743"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['conv1.weight',\n"," 'bn1.weight',\n"," 'layer1.0.conv1.weight',\n"," 'layer1.0.bn1.weight',\n"," 'layer1.0.conv2.weight',\n"," 'layer1.0.bn2.weight',\n"," 'layer1.1.conv1.weight',\n"," 'layer1.1.bn1.weight',\n"," 'layer1.1.conv2.weight',\n"," 'layer1.1.bn2.weight',\n"," 'layer1.2.conv1.weight',\n"," 'layer1.2.bn1.weight',\n"," 'layer1.2.conv2.weight',\n"," 'layer1.2.bn2.weight',\n"," 'layer2.0.conv1.weight',\n"," 'layer2.0.bn1.weight',\n"," 'layer2.0.conv2.weight',\n"," 'layer2.0.bn2.weight',\n"," 'layer2.0.downsample.0.weight',\n"," 'layer2.0.downsample.1.weight',\n"," 'layer2.1.conv1.weight',\n"," 'layer2.1.bn1.weight',\n"," 'layer2.1.conv2.weight',\n"," 'layer2.1.bn2.weight',\n"," 'layer2.2.conv1.weight',\n"," 'layer2.2.bn1.weight',\n"," 'layer2.2.conv2.weight',\n"," 'layer2.2.bn2.weight',\n"," 'layer3.0.conv1.weight',\n"," 'layer3.0.bn1.weight',\n"," 'layer3.0.conv2.weight',\n"," 'layer3.0.bn2.weight',\n"," 'layer3.0.downsample.0.weight',\n"," 'layer3.0.downsample.1.weight',\n"," 'layer3.1.conv1.weight',\n"," 'layer3.1.bn1.weight',\n"," 'layer3.1.conv2.weight',\n"," 'layer3.1.bn2.weight',\n"," 'layer3.2.conv1.weight',\n"," 'layer3.2.bn1.weight',\n"," 'layer3.2.conv2.weight',\n"," 'layer3.2.bn2.weight',\n"," 'fc.weight']"]},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":["new_tensor = model.state_dict()['conv1.weight'].reshape(-1)\n","for param in weighted_params[1:]:\n","  #print(model.state_dict()[param].shape)\n","  #print(model.state_dict()[param].reshape(-1).shape)\n","  torch.cat((new_tensor,model.state_dict()[param].reshape(-1)))"],"metadata":{"id":"Twne9E6BikfI","executionInfo":{"status":"ok","timestamp":1678872565580,"user_tz":420,"elapsed":202,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"execution_count":36,"outputs":[]},{"cell_type":"code","source":["new_tensor"],"metadata":{"id":"jxsxWpKBm-SB","executionInfo":{"status":"ok","timestamp":1678872672535,"user_tz":420,"elapsed":3,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"15fd2461-f733-4d12-c4bf-e33e05f2ab5b","colab":{"base_uri":"https://localhost:8080/"}},"execution_count":43,"outputs":[{"output_type":"execute_result","data":{"text/plain":["tensor([-3.0812e-01, -5.0015e-01, -4.7277e-01, -5.7345e-02, -3.3391e-01,\n","         2.2252e-02, -1.1516e-01, -2.3538e-01, -7.0031e-01,  7.7903e-02,\n","        -3.7467e-01,  1.4701e-01,  9.4276e-02,  2.3305e-01,  3.3145e-01,\n","         1.9757e-01,  2.1287e-01, -1.2889e-01,  3.4954e-01,  4.1271e-01,\n","         8.8731e-01,  5.5439e-03,  4.8112e-02,  4.8706e-01,  7.2975e-02,\n","        -1.1632e-01, -1.4936e-01, -1.3270e-01,  8.4842e-02,  1.6626e-02,\n","        -1.6044e-02, -4.0703e-01,  5.9312e-02, -1.7931e-01, -5.7929e-02,\n","         5.5549e-02,  8.6927e-01,  7.6141e-01,  6.3061e-01,  3.9092e-01,\n","        -1.5815e-01,  4.4541e-01,  3.2291e-02, -2.2053e-02,  1.8489e-01,\n","        -1.9269e-01, -1.2063e-01, -3.5768e-01, -1.8848e-01, -5.4546e-01,\n","        -1.1604e-01, -1.9468e-01, -4.3625e-01,  1.1473e-01, -4.8208e-01,\n","        -1.3402e-01, -8.9319e-01, -1.4896e-01,  8.9290e-02, -2.9856e-01,\n","        -1.3642e-02,  2.4576e-01,  6.7325e-01,  1.5015e-01,  3.0015e-01,\n","         1.2699e-01,  1.5346e-01,  1.1671e-01,  1.3930e-01, -1.6051e-02,\n","         1.1001e-01,  8.4179e-01,  1.0885e-01,  8.7395e-02, -2.1712e-01,\n","         6.8005e-02,  3.0602e-02, -1.4548e-01, -4.9311e-01, -3.7884e-01,\n","         1.8191e-01, -7.7060e-02, -5.1304e-02,  6.5782e-02,  2.3403e-01,\n","        -2.1924e-01,  3.5631e-01, -2.0042e-01, -3.0022e-01,  2.2583e-01,\n","         1.3601e-03, -3.9251e-01, -2.5026e-01,  3.7184e-01, -3.0504e-01,\n","        -6.7918e-02, -2.1593e-02, -2.4350e-01, -5.3364e-02,  1.1194e+00,\n","         3.5264e-01,  2.7269e-01,  9.5375e-01, -2.0390e-01, -5.5304e-02,\n","         3.5022e-01, -3.0270e-01, -2.3374e-02, -1.0576e-01, -4.2476e-01,\n","        -2.6127e-01, -2.2843e-01, -2.4189e-01, -4.4702e-01, -1.5628e-01,\n","        -2.5673e-01, -2.4590e-01, -8.5505e-02, -3.5276e-01, -9.3061e-02,\n","        -1.9185e-01,  1.5297e-01,  2.8763e-01, -9.9978e-02, -2.4275e-02,\n","         4.3234e-01, -1.2833e-01, -2.0617e-01,  1.0307e-01, -3.1253e-02,\n","         5.4353e-01,  7.9094e-01, -2.4141e-01,  5.2989e-01,  7.3007e-01,\n","         2.9034e-01,  3.5045e-01,  1.1148e-01,  1.9313e-01,  1.0121e+00,\n","         5.8645e-01, -4.6783e-02, -7.4416e-02, -3.6022e-01, -1.2975e-01,\n","        -1.5758e-01,  2.1624e-03, -3.2442e-01,  1.3186e-01, -2.9510e-01,\n","        -1.5209e-01, -4.6628e-02, -4.1599e-01,  4.9709e-02, -3.8186e-01,\n","        -3.7762e-01, -2.2844e-01,  1.9272e-01, -4.2452e-01,  2.9740e-01,\n","         2.8022e-01, -3.6100e-02, -7.1344e-02, -6.2110e-02,  4.3792e-02,\n","        -8.7572e-02,  2.1631e-01, -4.0827e-01,  1.7473e-01,  3.4015e-01,\n","        -4.5145e-01, -9.7529e-02,  3.8269e-02,  4.6566e-02, -3.2498e-01,\n","         6.3645e-01, -2.4201e-01,  3.9212e-02,  4.0367e-01, -3.0978e-01,\n","        -3.7149e-02, -5.0389e-01, -3.1233e-01, -1.6547e-01,  1.1116e-01,\n","        -8.5808e-01,  4.3631e-01,  7.8552e-01, -2.9442e-01,  1.7523e-01,\n","        -8.6505e-02, -8.9636e-02, -7.3206e-02,  3.9067e-01,  8.9322e-01,\n","         1.5782e-01,  8.5098e-02,  5.9874e-02, -4.1921e-02, -4.3666e-01,\n","        -5.4527e-02, -1.0324e+00, -4.4558e-01,  2.0703e-01, -1.9854e-01,\n","        -3.8283e-01, -2.7291e-01,  2.0271e-01, -1.9907e-01,  4.1854e-01,\n","        -5.7079e-02,  8.0656e-02,  5.2453e-01,  1.4170e-01,  1.3843e-01,\n","         2.9361e-01,  1.9101e-01,  8.3371e-01,  2.8318e-01, -4.5528e-02,\n","         6.1895e-01, -6.9532e-02, -2.8415e-01, -3.5243e-01, -3.4423e-01,\n","        -6.5455e-01,  4.0102e-01,  2.1518e-01, -2.3068e-01,  9.0273e-01,\n","         1.5667e-01, -1.2260e-01, -1.9596e-02,  6.7582e-02, -1.7277e-01,\n","         2.1695e-01,  2.6506e-01, -3.6016e-01,  2.7531e-01, -2.5978e-01,\n","         3.3006e-02, -2.4290e-02, -1.2502e-02, -3.0116e-01, -6.7258e-02,\n","        -2.3809e-01, -2.3154e-01,  2.0160e-01,  2.0408e-01, -1.5762e-01,\n","        -3.0387e-01,  2.7910e-02, -3.2445e-01,  4.6418e-01, -7.1857e-02,\n","        -3.2256e-01,  3.2849e-01,  3.8298e-01, -3.7686e-01, -1.7259e-01,\n","        -1.1410e-01,  1.7754e-01,  1.1499e+00,  8.7568e-02, -1.4510e-01,\n","         6.5153e-01,  3.5253e-01, -2.0849e-01, -2.7952e-01,  1.5775e-01,\n","         1.9625e-01,  2.3672e-01,  1.5996e-01, -1.1029e-01,  2.6369e-01,\n","        -3.3125e-01, -4.1837e-01, -2.3333e-01, -2.5202e-01,  1.3111e-01,\n","         4.1172e-01,  3.8640e-02, -7.5335e-02,  7.9572e-01, -4.4086e-01,\n","        -1.2012e-01,  1.2178e-01, -1.8169e-01, -7.0693e-01, -3.0073e-01,\n","        -6.6504e-01, -4.2117e-02,  3.9604e-01,  1.7151e-02,  8.9672e-02,\n","         3.8508e-01,  2.6276e-01, -9.0465e-02, -5.6912e-01, -5.8482e-01,\n","        -7.9698e-02,  3.8007e-03, -4.0078e-01, -1.1017e-01, -4.1361e-01,\n","        -2.5941e-01,  1.0421e-01, -1.2660e-01, -3.0645e-01,  3.0612e-01,\n","         3.8066e-01, -2.6788e-01, -1.2789e-01, -2.0813e-01,  1.3842e-01,\n","         7.6609e-01,  3.5631e-01,  2.9129e-01,  2.1870e-01,  6.5332e-01,\n","        -1.0948e-01,  2.7819e-01,  2.6682e-01,  1.6125e-02,  2.2408e-01,\n","         4.8135e-02, -6.3830e-02, -1.3168e-01, -8.4704e-01,  2.3897e-01,\n","         3.2909e-01,  1.2969e-01,  3.3640e-01, -1.0509e-01,  1.7097e-01,\n","         3.3000e-02, -6.8896e-02, -9.4115e-01,  4.4795e-01,  2.8161e-01,\n","         7.3293e-02,  1.8653e-01, -1.6556e-01, -1.5532e-01, -8.9147e-02,\n","        -2.4935e-02, -8.5061e-01,  3.6241e-01,  2.2638e-01,  1.2086e-01,\n","         2.0727e-01,  1.2184e-02,  2.9874e-01,  1.5840e-01,  3.4076e-01,\n","        -1.4157e-01,  2.7783e-01,  2.8968e-01, -1.1602e+00, -4.8177e-01,\n","        -1.0633e-02,  1.7156e-02,  2.8085e-01,  1.3546e-01, -4.1937e-01,\n","         1.5818e-01,  1.2317e-01, -1.3147e+00, -9.3174e-02, -4.4250e-02,\n","         1.1891e-01, -2.7093e-01,  5.9879e-02, -1.8866e-02, -1.9368e-01,\n","         2.4846e-01, -3.4216e-01,  4.3664e-01, -1.0072e-03,  3.0718e-01,\n","        -3.7157e-02,  3.4819e-01,  1.2942e-01,  4.7917e-01,  9.4145e-02,\n","        -1.9996e-01,  2.3521e-01, -3.5512e-02, -2.7382e-01, -4.1411e-01,\n","        -1.7153e-01, -8.0207e-01,  1.9083e-01, -4.5405e-01, -8.4459e-01,\n","        -1.5112e-01,  5.0986e-01,  3.1014e-01,  2.4576e-01, -2.4166e-02,\n","         1.6789e-01,  4.3303e-01, -3.1450e-01, -4.4266e-01,  9.0851e-03,\n","        -9.5506e-02, -5.1793e-02,  2.1536e-01,  4.3860e-01,  2.9606e-01,\n","        -5.1128e-01,  3.2909e-01,  3.7324e-01,  3.3842e-01, -1.4170e-01,\n","         3.1139e-02, -9.9705e-02,  9.6468e-02,  5.8206e-02, -1.0032e+00,\n","        -8.0785e-02, -2.2098e-01, -1.4726e-02,  2.8155e-01,  2.8703e-01,\n","         4.9630e-01,  1.3893e-01, -1.7803e-01, -7.3625e-01,  1.5603e-01,\n","         1.4867e-01, -4.2678e-02])"]},"metadata":{},"execution_count":43}]},{"cell_type":"code","source":["plt.hist(torch.histogram(new_tensor).hist)\n","plt.title('Histogram of the weights of plain Resnet-20')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":299},"id":"rEb-aHu1ehp_","executionInfo":{"status":"ok","timestamp":1678872662612,"user_tz":420,"elapsed":179,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"f297aa55-41e7-4c9d-eff7-0adb0f88c386"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Histogram of the weights of plain Resnet-20')"]},"metadata":{},"execution_count":42},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["# best_params"],"metadata":{"id":"wcV5AjtayKiz","executionInfo":{"status":"ok","timestamp":1678870690179,"user_tz":420,"elapsed":3,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["# loss_values_list = [el.item() for el in loss_values]\n","# #loss_values_list"],"metadata":{"id":"69mAzcYvgHJO","executionInfo":{"status":"ok","timestamp":1678578849138,"user_tz":480,"elapsed":492,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["plt.plot(loss_values,label='Training')\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","plt.legend();\n","plt.title('Resnet-20 Loss with Adam ')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"pWS69AZ7gdHK","executionInfo":{"status":"ok","timestamp":1678774990099,"user_tz":420,"elapsed":531,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"67e815c3-1f2a-4235-dd19-2cc972d6126a"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Resnet-20 Loss with Adam ')"]},"metadata":{},"execution_count":41},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.plot(accuracies,label='Training');\n","plt.plot(val_accuracy,label='Validation');\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","plt.legend();\n","plt.title('Resnet-20 Accuracy with Adam')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"M_V2dj97hATV","executionInfo":{"status":"ok","timestamp":1678775018684,"user_tz":420,"elapsed":249,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"fce877bf-5112-4ff7-cf41-087772480c43"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Resnet-20 Accuracy with Adam')"]},"metadata":{},"execution_count":42},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["fig, (axs1,axs2) = plt.subplots(1, 2, figsize=(15,5))\n","fig.suptitle('Resnet-20 Loss with Adam')\n","\n","                      \n","axs1.plot(loss_values,label='Training')\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","axs1.legend();\n","\n","axs2.plot(accuracies,label='Training');\n","axs2.plot(val_accuracy,label='Validation');\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","axs2.legend();"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":370},"id":"-XSTAGvFKaor","executionInfo":{"status":"ok","timestamp":1678784436030,"user_tz":420,"elapsed":1514,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"66977815-13b2-4a26-d483-933b7a6095f2"},"execution_count":88,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x360 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["accuracies"],"metadata":{"id":"gDXJZHQlg-WU","executionInfo":{"status":"aborted","timestamp":1678578710368,"user_tz":480,"elapsed":6,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":44,"metadata":{"id":"Ks1jG9Q9VC9g","executionInfo":{"status":"ok","timestamp":1678775108799,"user_tz":420,"elapsed":222,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"outputs":[],"source":["import csv\n","torch.save(model.state_dict(),'resnet_adam_trained.pt')\n","#save loss and accuracies\n","# with open('GFG', 'w') as f:\n","      \n","#     # using csv.writer method from CSV package\n","#     write = csv.writer(f)\n","      \n","#     write.writerows(loss_values_list)\n","#     write.writerows(accuracies)\n","\n","\n","with open(\"file_resnet_plain_adam.txt\", \"w\") as output:\n","    output.write(str(loss_values))"]},{"cell_type":"code","execution_count":43,"metadata":{"executionInfo":{"elapsed":20081,"status":"ok","timestamp":1678775061942,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":420},"id":"v2EpZCRsQsRx","colab":{"base_uri":"https://localhost:8080/"},"outputId":"5e1e38dd-23d1-400b-951f-eb5d3d1b759e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of the network on the 12500 training images: 78 %\n"]},{"output_type":"execute_result","data":{"text/plain":["(7895, 10000, 0.7895)"]},"metadata":{},"execution_count":43}],"source":["predict_accuracy(model,testloader)"]},{"cell_type":"code","source":["torch.save(best_params,'Best_params.pt') #f is something like 'resnet_nest_flood_bpoint15.pt'\n","  "],"metadata":{"id":"mtKJNMvVyoQw","executionInfo":{"status":"ok","timestamp":1678775175686,"user_tz":420,"elapsed":314,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"execution_count":45,"outputs":[]},{"cell_type":"code","source":["model.load_state_dict(torch.load('Best_params.pt'))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"_B78cnEvzE_q","executionInfo":{"status":"ok","timestamp":1678775215164,"user_tz":420,"elapsed":679,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"14a36420-f15a-40cd-bb2f-5ec92952205b"},"execution_count":46,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<All keys matched successfully>"]},"metadata":{},"execution_count":46}]},{"cell_type":"code","source":["predict_accuracy(model,testloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ylXhhFHhzPG6","executionInfo":{"status":"ok","timestamp":1678775243705,"user_tz":420,"elapsed":20292,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"0d944ac0-d629-4ec4-be10-c6fd5d699ebf"},"execution_count":47,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of the network on the 12500 training images: 79 %\n"]},{"output_type":"execute_result","data":{"text/plain":["(7917, 10000, 0.7917)"]},"metadata":{},"execution_count":47}]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qfPnwQ4IRP6-","executionInfo":{"status":"aborted","timestamp":1678774620133,"user_tz":420,"elapsed":5,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"outputs":[],"source":["# correct = 0\n","# total = 0\n","# with torch.no_grad(): #no grad so that we don't change the weights\n","#     for data in testloader:\n","#         images, labels = data\n","#         outputs = model(images)\n","#         _, predicted = torch.max(outputs.data, 1)\n","#         total += labels.size(0)\n","#         correct += (predicted == labels).sum().item()\n","\n","# print('Accuracy of the network on the 10000 test images: %d %%' % (\n","#     100 * correct / total))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Kn1ogmUzRPu7"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"iEl8nQWOQMEZ"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Evv9F8GSVWWO"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"mP4yfbRiVWTe"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"HYFxehelVWQx"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Di_2-Sv-VV4_"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"PiXm0MosVV2e"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vHo8nog1VVzy"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yRqWGpCCVVww"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"4YazGZR3VVuO"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"WY7pZezrVVrN"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"ALXOLSD6VVlt"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"_qvvtDHNVVfK"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"DP2XIL8VQL9u"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"pMh--2-NQL2Q"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"agXyZwZTQLrz"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"3weQEHhI_eUx"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"H0N1-9p9_eSM"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"63Fo6PBvVXeA"},"source":["## Flooding with Resnet-CIFAR10"]},{"cell_type":"markdown","source":["# Let's test for b=0.05 (aggressive), b=0.15 (medium), b=0.5 (soft)"],"metadata":{"id":"WUCnRU_NwghR"}},{"cell_type":"code","execution_count":48,"metadata":{"id":"lP7-zBTL_ePt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678775260632,"user_tz":420,"elapsed":533,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"9b2b7083-261f-4dba-be0a-8557c6e3ef73"},"outputs":[{"output_type":"stream","name":"stderr","text":["Using cache found in /root/.cache/torch/hub/chenyaofo_pytorch-cifar-models_master\n"]}],"source":["# introduce flood model\n","model_flood = model=torch.hub.load(\"chenyaofo/pytorch-cifar-models\", \"cifar10_resnet20\", pretrained=False, trust_repo=True)\n","#model_flood\n","criterion = nn.CrossEntropyLoss()\n","optimizer_flood = optim.Adam(model_flood.parameters(), lr=0.001)"]},{"cell_type":"code","source":["b=0.5 #aggressive\n","loss_values_flood = []\n","accuracies_flood = []\n","val_accuracy_flood = []\n","best_val_acc_flood = 0\n","for epoch in range(10):  # loop over the dataset multiple times\n","    total = 0\n","    correct = 0\n","\n","    running_loss = 0.0\n","    for i, data in enumerate(trainloader, 0):\n","        # get the inputs\n","        inputs, labels = data\n","\n","        # zero the parameter gradients\n","        optimizer_flood.zero_grad()\n","\n","        # forward + backward + optimize\n","        outputs = model_flood(inputs)\n","        loss = criterion(outputs, labels)\n","        # I would like to identify the point where loss dips below b\n","        #if loss < b:\n","        # print(\"Loss %f below b\"%(loss))\n","        flood = (loss-b).abs()+b  #try for various values of b\n","        flood.backward()\n","        optimizer_flood.step()\n","\n","        # print statistics\n","        running_loss += loss.item()\n","        loss_values_flood.append(loss.item())\n","        if i % 200 == 199:  # print every 200 mini-batches\n","            print('[%d, %5d] loss: %.3f' %\n","                  (epoch + 1, i + 1, running_loss / 200))\n","            running_loss = 0.0\n","    # caculate accuracy\n","    train_correct, train_total, train_acc = predict_accuracy(model_flood, trainloader)\n","    ## calculate validation accuracy\n","    val_correct, val_total, val_acc = predict_accuracy(model_flood, validloader)\n","    accuracies_flood.append(train_acc)\n","    val_accuracy_flood.append(val_acc)\n","\n","    print('(Epoch %d / %d) train acc: %f; val_acc: %f' % (epoch+1, 10, train_acc, val_acc))\n","\n","    # retain best parameters\n","    if val_acc > best_val_acc_flood:\n","        best_val_acc_flood = val_acc\n","        best_params = model.state_dict()\n","        filnam = 'resnet_adam_flood'+str(b)+'.pt'\n","        filnam_loss = 'loss_res_adam_flood'+str(b)+'.txt'\n","        save_checkpoint(model, filnam, loss_values, filnam_loss)\n","\n","print('Finished Training')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"azkYF8x5wbfc","executionInfo":{"status":"ok","timestamp":1678778830753,"user_tz":420,"elapsed":3535102,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"85078dda-22be-4782-99f2-6d4068c2ad3d"},"execution_count":49,"outputs":[{"output_type":"stream","name":"stdout","text":["[1,   200] loss: 2.239\n","[1,   400] loss: 2.014\n","[1,   600] loss: 1.999\n","[1,   800] loss: 1.942\n","[1,  1000] loss: 1.893\n","[1,  1200] loss: 1.879\n","[1,  1400] loss: 1.856\n","[1,  1600] loss: 1.826\n","[1,  1800] loss: 1.818\n","[1,  2000] loss: 1.783\n","[1,  2200] loss: 1.788\n","[1,  2400] loss: 1.676\n","[1,  2600] loss: 1.700\n","[1,  2800] loss: 1.623\n","[1,  3000] loss: 1.684\n","[1,  3200] loss: 1.615\n","[1,  3400] loss: 1.600\n","[1,  3600] loss: 1.520\n","[1,  3800] loss: 1.600\n","[1,  4000] loss: 1.531\n","[1,  4200] loss: 1.485\n","[1,  4400] loss: 1.542\n","[1,  4600] loss: 1.451\n","[1,  4800] loss: 1.516\n","[1,  5000] loss: 1.471\n","[1,  5200] loss: 1.455\n","[1,  5400] loss: 1.427\n","[1,  5600] loss: 1.362\n","[1,  5800] loss: 1.429\n","[1,  6000] loss: 1.469\n","[1,  6200] loss: 1.397\n","[1,  6400] loss: 1.470\n","[1,  6600] loss: 1.406\n","[1,  6800] loss: 1.301\n","[1,  7000] loss: 1.342\n","[1,  7200] loss: 1.322\n","[1,  7400] loss: 1.331\n","[1,  7600] loss: 1.325\n","[1,  7800] loss: 1.284\n","[1,  8000] loss: 1.304\n","[1,  8200] loss: 1.237\n","[1,  8400] loss: 1.265\n","[1,  8600] loss: 1.299\n","[1,  8800] loss: 1.285\n","[1,  9000] loss: 1.303\n","[1,  9200] loss: 1.251\n","[1,  9400] loss: 1.258\n","[1,  9600] loss: 1.204\n","[1,  9800] loss: 1.249\n","[1, 10000] loss: 1.231\n","[1, 10200] loss: 1.231\n","[1, 10400] loss: 1.191\n","[1, 10600] loss: 1.169\n","[1, 10800] loss: 1.244\n","[1, 11000] loss: 1.203\n","[1, 11200] loss: 1.232\n","Accuracy of the network on the 12500 training images: 58 %\n","Accuracy of the network on the 12500 training images: 57 %\n","(Epoch 1 / 10) train acc: 0.583289; val_acc: 0.578200\n","[2,   200] loss: 1.073\n","[2,   400] loss: 1.145\n","[2,   600] loss: 1.117\n","[2,   800] loss: 1.205\n","[2,  1000] loss: 1.178\n","[2,  1200] loss: 1.058\n","[2,  1400] loss: 1.152\n","[2,  1600] loss: 1.096\n","[2,  1800] loss: 1.074\n","[2,  2000] loss: 1.099\n","[2,  2200] loss: 1.089\n","[2,  2400] loss: 1.113\n","[2,  2600] loss: 1.142\n","[2,  2800] loss: 1.131\n","[2,  3000] loss: 1.041\n","[2,  3200] loss: 1.116\n","[2,  3400] loss: 1.114\n","[2,  3600] loss: 1.066\n","[2,  3800] loss: 1.106\n","[2,  4000] loss: 1.013\n","[2,  4200] loss: 1.043\n","[2,  4400] loss: 1.073\n","[2,  4600] loss: 1.023\n","[2,  4800] loss: 1.047\n","[2,  5000] loss: 1.077\n","[2,  5200] loss: 0.987\n","[2,  5400] loss: 1.050\n","[2,  5600] loss: 1.030\n","[2,  5800] loss: 1.057\n","[2,  6000] loss: 1.042\n","[2,  6200] loss: 1.030\n","[2,  6400] loss: 1.062\n","[2,  6600] loss: 1.010\n","[2,  6800] loss: 1.118\n","[2,  7000] loss: 1.023\n","[2,  7200] loss: 1.032\n","[2,  7400] loss: 1.014\n","[2,  7600] loss: 1.014\n","[2,  7800] loss: 1.025\n","[2,  8000] loss: 1.065\n","[2,  8200] loss: 1.001\n","[2,  8400] loss: 1.005\n","[2,  8600] loss: 0.991\n","[2,  8800] loss: 1.014\n","[2,  9000] loss: 0.930\n","[2,  9200] loss: 1.012\n","[2,  9400] loss: 0.983\n","[2,  9600] loss: 0.970\n","[2,  9800] loss: 1.009\n","[2, 10000] loss: 0.984\n","[2, 10200] loss: 0.958\n","[2, 10400] loss: 0.947\n","[2, 10600] loss: 0.961\n","[2, 10800] loss: 0.965\n","[2, 11000] loss: 1.018\n","[2, 11200] loss: 1.019\n","Accuracy of the network on the 12500 training images: 67 %\n","Accuracy of the network on the 12500 training images: 66 %\n","(Epoch 2 / 10) train acc: 0.677267; val_acc: 0.664200\n","[3,   200] loss: 0.944\n","[3,   400] loss: 0.951\n","[3,   600] loss: 0.901\n","[3,   800] loss: 0.928\n","[3,  1000] loss: 0.919\n","[3,  1200] loss: 0.960\n","[3,  1400] loss: 0.925\n","[3,  1600] loss: 0.923\n","[3,  1800] loss: 0.954\n","[3,  2000] loss: 0.901\n","[3,  2200] loss: 0.933\n","[3,  2400] loss: 0.902\n","[3,  2600] loss: 0.925\n","[3,  2800] loss: 0.928\n","[3,  3000] loss: 0.879\n","[3,  3200] loss: 0.907\n","[3,  3400] loss: 0.845\n","[3,  3600] loss: 0.899\n","[3,  3800] loss: 0.883\n","[3,  4000] loss: 0.903\n","[3,  4200] loss: 0.995\n","[3,  4400] loss: 0.903\n","[3,  4600] loss: 0.875\n","[3,  4800] loss: 0.893\n","[3,  5000] loss: 0.924\n","[3,  5200] loss: 0.876\n","[3,  5400] loss: 0.904\n","[3,  5600] loss: 0.885\n","[3,  5800] loss: 0.930\n","[3,  6000] loss: 0.929\n","[3,  6200] loss: 0.915\n","[3,  6400] loss: 0.881\n","[3,  6600] loss: 0.899\n","[3,  6800] loss: 0.844\n","[3,  7000] loss: 0.881\n","[3,  7200] loss: 0.903\n","[3,  7400] loss: 0.808\n","[3,  7600] loss: 0.901\n","[3,  7800] loss: 0.826\n","[3,  8000] loss: 0.832\n","[3,  8200] loss: 0.819\n","[3,  8400] loss: 0.843\n","[3,  8600] loss: 0.898\n","[3,  8800] loss: 0.895\n","[3,  9000] loss: 0.856\n","[3,  9200] loss: 0.898\n","[3,  9400] loss: 0.963\n","[3,  9600] loss: 0.819\n","[3,  9800] loss: 0.876\n","[3, 10000] loss: 0.849\n","[3, 10200] loss: 0.880\n","[3, 10400] loss: 0.841\n","[3, 10600] loss: 0.853\n","[3, 10800] loss: 0.843\n","[3, 11000] loss: 0.856\n","[3, 11200] loss: 0.863\n","Accuracy of the network on the 12500 training images: 73 %\n","Accuracy of the network on the 12500 training images: 71 %\n","(Epoch 3 / 10) train acc: 0.734511; val_acc: 0.714800\n","[4,   200] loss: 0.813\n","[4,   400] loss: 0.798\n","[4,   600] loss: 0.810\n","[4,   800] loss: 0.784\n","[4,  1000] loss: 0.827\n","[4,  1200] loss: 0.808\n","[4,  1400] loss: 0.808\n","[4,  1600] loss: 0.808\n","[4,  1800] loss: 0.777\n","[4,  2000] loss: 0.863\n","[4,  2200] loss: 0.805\n","[4,  2400] loss: 0.838\n","[4,  2600] loss: 0.816\n","[4,  2800] loss: 0.805\n","[4,  3000] loss: 0.783\n","[4,  3200] loss: 0.781\n","[4,  3400] loss: 0.839\n","[4,  3600] loss: 0.793\n","[4,  3800] loss: 0.870\n","[4,  4000] loss: 0.832\n","[4,  4200] loss: 0.808\n","[4,  4400] loss: 0.807\n","[4,  4600] loss: 0.800\n","[4,  4800] loss: 0.749\n","[4,  5000] loss: 0.848\n","[4,  5200] loss: 0.840\n","[4,  5400] loss: 0.801\n","[4,  5600] loss: 0.796\n","[4,  5800] loss: 0.778\n","[4,  6000] loss: 0.847\n","[4,  6200] loss: 0.797\n","[4,  6400] loss: 0.801\n","[4,  6600] loss: 0.799\n","[4,  6800] loss: 0.832\n","[4,  7000] loss: 0.828\n","[4,  7200] loss: 0.847\n","[4,  7400] loss: 0.746\n","[4,  7600] loss: 0.827\n","[4,  7800] loss: 0.782\n","[4,  8000] loss: 0.784\n","[4,  8200] loss: 0.812\n","[4,  8400] loss: 0.780\n","[4,  8600] loss: 0.811\n","[4,  8800] loss: 0.742\n","[4,  9000] loss: 0.810\n","[4,  9200] loss: 0.807\n","[4,  9400] loss: 0.741\n","[4,  9600] loss: 0.780\n","[4,  9800] loss: 0.766\n","[4, 10000] loss: 0.764\n","[4, 10200] loss: 0.792\n","[4, 10400] loss: 0.773\n","[4, 10600] loss: 0.775\n","[4, 10800] loss: 0.766\n","[4, 11000] loss: 0.792\n","[4, 11200] loss: 0.788\n","Accuracy of the network on the 12500 training images: 75 %\n","Accuracy of the network on the 12500 training images: 73 %\n","(Epoch 4 / 10) train acc: 0.759178; val_acc: 0.733800\n","[5,   200] loss: 0.719\n","[5,   400] loss: 0.791\n","[5,   600] loss: 0.797\n","[5,   800] loss: 0.722\n","[5,  1000] loss: 0.779\n","[5,  1200] loss: 0.730\n","[5,  1400] loss: 0.726\n","[5,  1600] loss: 0.745\n","[5,  1800] loss: 0.746\n","[5,  2000] loss: 0.761\n","[5,  2200] loss: 0.734\n","[5,  2400] loss: 0.743\n","[5,  2600] loss: 0.781\n","[5,  2800] loss: 0.707\n","[5,  3000] loss: 0.741\n","[5,  3200] loss: 0.771\n","[5,  3400] loss: 0.750\n","[5,  3600] loss: 0.761\n","[5,  3800] loss: 0.750\n","[5,  4000] loss: 0.751\n","[5,  4200] loss: 0.772\n","[5,  4400] loss: 0.797\n","[5,  4600] loss: 0.772\n","[5,  4800] loss: 0.745\n","[5,  5000] loss: 0.805\n","[5,  5200] loss: 0.744\n","[5,  5400] loss: 0.748\n","[5,  5600] loss: 0.745\n","[5,  5800] loss: 0.742\n","[5,  6000] loss: 0.785\n","[5,  6200] loss: 0.755\n","[5,  6400] loss: 0.763\n","[5,  6600] loss: 0.756\n","[5,  6800] loss: 0.755\n","[5,  7000] loss: 0.739\n","[5,  7200] loss: 0.746\n","[5,  7400] loss: 0.727\n","[5,  7600] loss: 0.702\n","[5,  7800] loss: 0.698\n","[5,  8000] loss: 0.706\n","[5,  8200] loss: 0.754\n","[5,  8400] loss: 0.720\n","[5,  8600] loss: 0.737\n","[5,  8800] loss: 0.789\n","[5,  9000] loss: 0.741\n","[5,  9200] loss: 0.730\n","[5,  9400] loss: 0.706\n","[5,  9600] loss: 0.754\n","[5,  9800] loss: 0.779\n","[5, 10000] loss: 0.780\n","[5, 10200] loss: 0.735\n","[5, 10400] loss: 0.749\n","[5, 10600] loss: 0.766\n","[5, 10800] loss: 0.771\n","[5, 11000] loss: 0.733\n","[5, 11200] loss: 0.752\n","Accuracy of the network on the 12500 training images: 78 %\n","Accuracy of the network on the 12500 training images: 74 %\n","(Epoch 5 / 10) train acc: 0.788867; val_acc: 0.740200\n","[6,   200] loss: 0.679\n","[6,   400] loss: 0.716\n","[6,   600] loss: 0.689\n","[6,   800] loss: 0.736\n","[6,  1000] loss: 0.663\n","[6,  1200] loss: 0.725\n","[6,  1400] loss: 0.720\n","[6,  1600] loss: 0.719\n","[6,  1800] loss: 0.728\n","[6,  2000] loss: 0.714\n","[6,  2200] loss: 0.717\n","[6,  2400] loss: 0.684\n","[6,  2600] loss: 0.677\n","[6,  2800] loss: 0.752\n","[6,  3000] loss: 0.706\n","[6,  3200] loss: 0.731\n","[6,  3400] loss: 0.719\n","[6,  3600] loss: 0.653\n","[6,  3800] loss: 0.715\n","[6,  4000] loss: 0.703\n","[6,  4200] loss: 0.707\n","[6,  4400] loss: 0.732\n","[6,  4600] loss: 0.772\n","[6,  4800] loss: 0.696\n","[6,  5000] loss: 0.712\n","[6,  5200] loss: 0.706\n","[6,  5400] loss: 0.708\n","[6,  5600] loss: 0.696\n","[6,  5800] loss: 0.723\n","[6,  6000] loss: 0.721\n","[6,  6200] loss: 0.700\n","[6,  6400] loss: 0.706\n","[6,  6600] loss: 0.699\n","[6,  6800] loss: 0.705\n","[6,  7000] loss: 0.704\n","[6,  7200] loss: 0.733\n","[6,  7400] loss: 0.746\n","[6,  7600] loss: 0.734\n","[6,  7800] loss: 0.689\n","[6,  8000] loss: 0.684\n","[6,  8200] loss: 0.698\n","[6,  8400] loss: 0.685\n","[6,  8600] loss: 0.709\n","[6,  8800] loss: 0.744\n","[6,  9000] loss: 0.669\n","[6,  9200] loss: 0.722\n","[6,  9400] loss: 0.692\n","[6,  9600] loss: 0.699\n","[6,  9800] loss: 0.726\n","[6, 10000] loss: 0.699\n","[6, 10200] loss: 0.758\n","[6, 10400] loss: 0.698\n","[6, 10600] loss: 0.714\n","[6, 10800] loss: 0.719\n","[6, 11000] loss: 0.742\n","[6, 11200] loss: 0.722\n","Accuracy of the network on the 12500 training images: 79 %\n","Accuracy of the network on the 12500 training images: 75 %\n","(Epoch 6 / 10) train acc: 0.794711; val_acc: 0.753200\n","[7,   200] loss: 0.657\n","[7,   400] loss: 0.683\n","[7,   600] loss: 0.694\n","[7,   800] loss: 0.681\n","[7,  1000] loss: 0.688\n","[7,  1200] loss: 0.666\n","[7,  1400] loss: 0.716\n","[7,  1600] loss: 0.675\n","[7,  1800] loss: 0.719\n","[7,  2000] loss: 0.684\n","[7,  2200] loss: 0.765\n","[7,  2400] loss: 0.704\n","[7,  2600] loss: 0.685\n","[7,  2800] loss: 0.675\n","[7,  3000] loss: 0.654\n","[7,  3200] loss: 0.651\n","[7,  3400] loss: 0.692\n","[7,  3600] loss: 0.694\n","[7,  3800] loss: 0.646\n","[7,  4000] loss: 0.687\n","[7,  4200] loss: 0.675\n","[7,  4400] loss: 0.669\n","[7,  4600] loss: 0.718\n","[7,  4800] loss: 0.670\n","[7,  5000] loss: 0.688\n","[7,  5200] loss: 0.639\n","[7,  5400] loss: 0.670\n","[7,  5600] loss: 0.707\n","[7,  5800] loss: 0.697\n","[7,  6000] loss: 0.676\n","[7,  6200] loss: 0.689\n","[7,  6400] loss: 0.665\n","[7,  6600] loss: 0.694\n","[7,  6800] loss: 0.711\n","[7,  7000] loss: 0.672\n","[7,  7200] loss: 0.700\n","[7,  7400] loss: 0.677\n","[7,  7600] loss: 0.687\n","[7,  7800] loss: 0.739\n","[7,  8000] loss: 0.698\n","[7,  8200] loss: 0.678\n","[7,  8400] loss: 0.628\n","[7,  8600] loss: 0.695\n","[7,  8800] loss: 0.690\n","[7,  9000] loss: 0.663\n","[7,  9200] loss: 0.687\n","[7,  9400] loss: 0.674\n","[7,  9600] loss: 0.693\n","[7,  9800] loss: 0.685\n","[7, 10000] loss: 0.704\n","[7, 10200] loss: 0.667\n","[7, 10400] loss: 0.713\n","[7, 10600] loss: 0.680\n","[7, 10800] loss: 0.692\n","[7, 11000] loss: 0.713\n","[7, 11200] loss: 0.683\n","Accuracy of the network on the 12500 training images: 80 %\n","Accuracy of the network on the 12500 training images: 75 %\n","(Epoch 7 / 10) train acc: 0.808200; val_acc: 0.756600\n","[8,   200] loss: 0.617\n","[8,   400] loss: 0.659\n","[8,   600] loss: 0.691\n","[8,   800] loss: 0.642\n","[8,  1000] loss: 0.663\n","[8,  1200] loss: 0.673\n","[8,  1400] loss: 0.661\n","[8,  1600] loss: 0.669\n","[8,  1800] loss: 0.642\n","[8,  2000] loss: 0.656\n","[8,  2200] loss: 0.631\n","[8,  2400] loss: 0.660\n","[8,  2600] loss: 0.686\n","[8,  2800] loss: 0.658\n","[8,  3000] loss: 0.647\n","[8,  3200] loss: 0.675\n","[8,  3400] loss: 0.672\n","[8,  3600] loss: 0.626\n","[8,  3800] loss: 0.624\n","[8,  4000] loss: 0.635\n","[8,  4200] loss: 0.690\n","[8,  4400] loss: 0.647\n","[8,  4600] loss: 0.669\n","[8,  4800] loss: 0.642\n","[8,  5000] loss: 0.669\n","[8,  5200] loss: 0.635\n","[8,  5400] loss: 0.699\n","[8,  5600] loss: 0.645\n","[8,  5800] loss: 0.709\n","[8,  6000] loss: 0.633\n","[8,  6200] loss: 0.670\n","[8,  6400] loss: 0.614\n","[8,  6600] loss: 0.649\n","[8,  6800] loss: 0.705\n","[8,  7000] loss: 0.658\n","[8,  7200] loss: 0.659\n","[8,  7400] loss: 0.691\n","[8,  7600] loss: 0.675\n","[8,  7800] loss: 0.633\n","[8,  8000] loss: 0.665\n","[8,  8200] loss: 0.712\n","[8,  8400] loss: 0.703\n","[8,  8600] loss: 0.641\n","[8,  8800] loss: 0.675\n","[8,  9000] loss: 0.680\n","[8,  9200] loss: 0.704\n","[8,  9400] loss: 0.655\n","[8,  9600] loss: 0.665\n","[8,  9800] loss: 0.656\n","[8, 10000] loss: 0.674\n","[8, 10200] loss: 0.661\n","[8, 10400] loss: 0.724\n","[8, 10600] loss: 0.673\n","[8, 10800] loss: 0.690\n","[8, 11000] loss: 0.668\n","[8, 11200] loss: 0.716\n","Accuracy of the network on the 12500 training images: 81 %\n","Accuracy of the network on the 12500 training images: 75 %\n","(Epoch 8 / 10) train acc: 0.810622; val_acc: 0.758200\n","[9,   200] loss: 0.612\n","[9,   400] loss: 0.621\n","[9,   600] loss: 0.610\n","[9,   800] loss: 0.621\n","[9,  1000] loss: 0.634\n","[9,  1200] loss: 0.646\n","[9,  1400] loss: 0.622\n","[9,  1600] loss: 0.667\n","[9,  1800] loss: 0.645\n","[9,  2000] loss: 0.641\n","[9,  2200] loss: 0.643\n","[9,  2400] loss: 0.632\n","[9,  2600] loss: 0.622\n","[9,  2800] loss: 0.659\n","[9,  3000] loss: 0.632\n","[9,  3200] loss: 0.660\n","[9,  3400] loss: 0.641\n","[9,  3600] loss: 0.633\n","[9,  3800] loss: 0.683\n","[9,  4000] loss: 0.637\n","[9,  4200] loss: 0.646\n","[9,  4400] loss: 0.631\n","[9,  4600] loss: 0.650\n","[9,  4800] loss: 0.644\n","[9,  5000] loss: 0.626\n","[9,  5200] loss: 0.646\n","[9,  5400] loss: 0.651\n","[9,  5600] loss: 0.616\n","[9,  5800] loss: 0.669\n","[9,  6000] loss: 0.684\n","[9,  6200] loss: 0.656\n","[9,  6400] loss: 0.623\n","[9,  6600] loss: 0.657\n","[9,  6800] loss: 0.648\n","[9,  7000] loss: 0.649\n","[9,  7200] loss: 0.676\n","[9,  7400] loss: 0.611\n","[9,  7600] loss: 0.668\n","[9,  7800] loss: 0.665\n","[9,  8000] loss: 0.637\n","[9,  8200] loss: 0.723\n","[9,  8400] loss: 0.629\n","[9,  8600] loss: 0.638\n","[9,  8800] loss: 0.634\n","[9,  9000] loss: 0.643\n","[9,  9200] loss: 0.634\n","[9,  9400] loss: 0.653\n","[9,  9600] loss: 0.643\n","[9,  9800] loss: 0.621\n","[9, 10000] loss: 0.665\n","[9, 10200] loss: 0.630\n","[9, 10400] loss: 0.611\n","[9, 10600] loss: 0.623\n","[9, 10800] loss: 0.634\n","[9, 11000] loss: 0.662\n","[9, 11200] loss: 0.665\n","Accuracy of the network on the 12500 training images: 82 %\n","Accuracy of the network on the 12500 training images: 76 %\n","(Epoch 9 / 10) train acc: 0.821222; val_acc: 0.763000\n","[10,   200] loss: 0.595\n","[10,   400] loss: 0.630\n","[10,   600] loss: 0.612\n","[10,   800] loss: 0.629\n","[10,  1000] loss: 0.629\n","[10,  1200] loss: 0.647\n","[10,  1400] loss: 0.620\n","[10,  1600] loss: 0.609\n","[10,  1800] loss: 0.656\n","[10,  2000] loss: 0.633\n","[10,  2200] loss: 0.637\n","[10,  2400] loss: 0.659\n","[10,  2600] loss: 0.635\n","[10,  2800] loss: 0.624\n","[10,  3000] loss: 0.618\n","[10,  3200] loss: 0.647\n","[10,  3400] loss: 0.614\n","[10,  3600] loss: 0.635\n","[10,  3800] loss: 0.626\n","[10,  4000] loss: 0.640\n","[10,  4200] loss: 0.638\n","[10,  4400] loss: 0.627\n","[10,  4600] loss: 0.644\n","[10,  4800] loss: 0.631\n","[10,  5000] loss: 0.599\n","[10,  5200] loss: 0.636\n","[10,  5400] loss: 0.636\n","[10,  5600] loss: 0.662\n","[10,  5800] loss: 0.645\n","[10,  6000] loss: 0.620\n","[10,  6200] loss: 0.620\n","[10,  6400] loss: 0.644\n","[10,  6600] loss: 0.593\n","[10,  6800] loss: 0.633\n","[10,  7000] loss: 0.649\n","[10,  7200] loss: 0.632\n","[10,  7400] loss: 0.615\n","[10,  7600] loss: 0.653\n","[10,  7800] loss: 0.642\n","[10,  8000] loss: 0.632\n","[10,  8200] loss: 0.624\n","[10,  8400] loss: 0.663\n","[10,  8600] loss: 0.644\n","[10,  8800] loss: 0.598\n","[10,  9000] loss: 0.660\n","[10,  9200] loss: 0.646\n","[10,  9400] loss: 0.632\n","[10,  9600] loss: 0.638\n","[10,  9800] loss: 0.599\n","[10, 10000] loss: 0.639\n","[10, 10200] loss: 0.641\n","[10, 10400] loss: 0.638\n","[10, 10600] loss: 0.634\n","[10, 10800] loss: 0.651\n","[10, 11000] loss: 0.640\n","[10, 11200] loss: 0.646\n","Accuracy of the network on the 12500 training images: 83 %\n","Accuracy of the network on the 12500 training images: 76 %\n","(Epoch 10 / 10) train acc: 0.830244; val_acc: 0.767200\n","Finished Training\n"]}]},{"cell_type":"code","source":["predict_accuracy(model_flood,testloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ymTw8kZC1L35","executionInfo":{"status":"ok","timestamp":1678779298412,"user_tz":420,"elapsed":19943,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"2ec5ee8d-0af8-43c1-b9a5-36e339b753b0"},"execution_count":50,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of the network on the 12500 training images: 76 %\n"]},{"output_type":"execute_result","data":{"text/plain":["(7676, 10000, 0.7676)"]},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["#### save fully trained model with 76.8% accuracy\n","torch.save(model.state_dict(),'resnet_adam_flood_0.5_fully_trained.pt')"],"metadata":{"id":"N2mI4VtY1L1w","executionInfo":{"status":"ok","timestamp":1678779419342,"user_tz":420,"elapsed":313,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"execution_count":51,"outputs":[]},{"cell_type":"code","source":["torch.save(best_params,'Best_params_flood.pt') #f is something like 'resnet_nest_flood_bpoint15.pt'\n","model.load_state_dict(torch.load('Best_params_flood.pt'))\n","predict_accuracy(model_flood,testloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"3Y820iDn1LzL","executionInfo":{"status":"ok","timestamp":1678779550747,"user_tz":420,"elapsed":20033,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"06998a66-870b-446b-e632-e477229698d3"},"execution_count":52,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of the network on the 12500 training images: 77 %\n"]},{"output_type":"execute_result","data":{"text/plain":["(7717, 10000, 0.7717)"]},"metadata":{},"execution_count":52}]},{"cell_type":"code","source":["plt.plot(loss_values_flood,label='Training')\n","plt.xlabel('Iterations')\n","plt.ylabel('Loss')\n","plt.legend();\n","plt.title('Resnet-20 Flood Loss')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"OATRRy0DDzig","executionInfo":{"status":"ok","timestamp":1678779771722,"user_tz":420,"elapsed":1245,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"cbd5408b-e2e2-477e-a302-1e23430793b4"},"execution_count":57,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Resnet-20 Flood Loss')"]},"metadata":{},"execution_count":57},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.plot(accuracies_flood,label='Training');\n","plt.plot(val_accuracy_flood,label='Validation');\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","plt.legend();\n","plt.title('Resnet-20 Flood Accuracy')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"suhIreDH1Lwn","executionInfo":{"status":"ok","timestamp":1678779728402,"user_tz":420,"elapsed":590,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"b0ac25f9-281b-47c2-a1aa-6ad9292f99af"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Resnet-20 Flood Accuracy')"]},"metadata":{},"execution_count":56},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[],"metadata":{"id":"1FZLzCH_XgFd"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["# Trying for b=0.05"],"metadata":{"id":"F6I5-k2bE-ZR"}},{"cell_type":"code","source":["# introduce flood model\n","model_flood = model=torch.hub.load(\"chenyaofo/pytorch-cifar-models\", \"cifar10_resnet20\", pretrained=False, trust_repo=True)\n","#model_flood\n","criterion = nn.CrossEntropyLoss()\n","optimizer_flood = optim.Adam(model_flood.parameters(), lr=0.001)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"cxeHQaJR1LuG","executionInfo":{"status":"ok","timestamp":1678779891717,"user_tz":420,"elapsed":660,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"62fda750-19ef-4f67-89e1-8e9bb19e071a"},"execution_count":58,"outputs":[{"output_type":"stream","name":"stderr","text":["Using cache found in /root/.cache/torch/hub/chenyaofo_pytorch-cifar-models_master\n"]}]},{"cell_type":"code","source":["b=0.05 #soft\n","loss_values_flood = []\n","accuracies_flood = []\n","val_accuracy_flood = []\n","best_val_acc_flood = 0\n","for epoch in range(10):  # loop over the dataset multiple times\n","    total = 0\n","    correct = 0\n","\n","    running_loss = 0.0\n","    for i, data in enumerate(trainloader, 0):\n","        # get the inputs\n","        inputs, labels = data\n","\n","        # zero the parameter gradients\n","        optimizer_flood.zero_grad()\n","\n","        # forward + backward + optimize\n","        outputs = model_flood(inputs)\n","        loss = criterion(outputs, labels)\n","        # I would like to identify the point where loss dips below b\n","        #if loss < b:\n","        # print(\"Loss %f below b\"%(loss))\n","        flood = (loss-b).abs()+b  #try for various values of b\n","        flood.backward()\n","        optimizer_flood.step()\n","\n","        # print statistics\n","        running_loss += loss.item()\n","        loss_values_flood.append(loss.item())\n","        if i % 200 == 199:  # print every 200 mini-batches\n","            print('[%d, %5d] loss: %.3f' %\n","                  (epoch + 1, i + 1, running_loss / 200))\n","            running_loss = 0.0\n","    # caculate accuracy\n","    train_correct, train_total, train_acc = predict_accuracy(model_flood, trainloader)\n","    ## calculate validation accuracy\n","    val_correct, val_total, val_acc = predict_accuracy(model_flood, validloader)\n","    accuracies_flood.append(train_acc)\n","    val_accuracy_flood.append(val_acc)\n","\n","    print('(Epoch %d / %d) train acc: %f; val_acc: %f' % (epoch+1, 10, train_acc, val_acc))\n","\n","    # retain best parameters\n","    if val_acc > best_val_acc_flood:\n","        best_val_acc_flood = val_acc\n","        best_params = model.state_dict()\n","        filnam = 'resnet_adam_flood'+str(b)+'.pt'\n","        filnam_loss = 'loss_res_adam_flood'+str(b)+'.txt'\n","        save_checkpoint(model, filnam, loss_values, filnam_loss)\n","\n","print('Finished Training')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jjD8lUvu1Lrh","executionInfo":{"status":"ok","timestamp":1678783492552,"user_tz":420,"elapsed":3569736,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"50f4ef5e-3538-4681-b41d-e9facb99f109"},"execution_count":59,"outputs":[{"output_type":"stream","name":"stdout","text":["[1,   200] loss: 2.188\n","[1,   400] loss: 2.026\n","[1,   600] loss: 1.998\n","[1,   800] loss: 1.989\n","[1,  1000] loss: 1.898\n","[1,  1200] loss: 1.835\n","[1,  1400] loss: 1.870\n","[1,  1600] loss: 1.782\n","[1,  1800] loss: 1.760\n","[1,  2000] loss: 1.746\n","[1,  2200] loss: 1.772\n","[1,  2400] loss: 1.785\n","[1,  2600] loss: 1.661\n","[1,  2800] loss: 1.648\n","[1,  3000] loss: 1.633\n","[1,  3200] loss: 1.614\n","[1,  3400] loss: 1.616\n","[1,  3600] loss: 1.596\n","[1,  3800] loss: 1.601\n","[1,  4000] loss: 1.559\n","[1,  4200] loss: 1.559\n","[1,  4400] loss: 1.496\n","[1,  4600] loss: 1.451\n","[1,  4800] loss: 1.486\n","[1,  5000] loss: 1.462\n","[1,  5200] loss: 1.426\n","[1,  5400] loss: 1.469\n","[1,  5600] loss: 1.409\n","[1,  5800] loss: 1.413\n","[1,  6000] loss: 1.403\n","[1,  6200] loss: 1.449\n","[1,  6400] loss: 1.282\n","[1,  6600] loss: 1.351\n","[1,  6800] loss: 1.356\n","[1,  7000] loss: 1.329\n","[1,  7200] loss: 1.344\n","[1,  7400] loss: 1.350\n","[1,  7600] loss: 1.222\n","[1,  7800] loss: 1.270\n","[1,  8000] loss: 1.244\n","[1,  8200] loss: 1.310\n","[1,  8400] loss: 1.293\n","[1,  8600] loss: 1.164\n","[1,  8800] loss: 1.272\n","[1,  9000] loss: 1.223\n","[1,  9200] loss: 1.218\n","[1,  9400] loss: 1.236\n","[1,  9600] loss: 1.214\n","[1,  9800] loss: 1.209\n","[1, 10000] loss: 1.211\n","[1, 10200] loss: 1.245\n","[1, 10400] loss: 1.159\n","[1, 10600] loss: 1.255\n","[1, 10800] loss: 1.218\n","[1, 11000] loss: 1.150\n","[1, 11200] loss: 1.220\n","Accuracy of the network on the 12500 training images: 60 %\n","Accuracy of the network on the 12500 training images: 59 %\n","(Epoch 1 / 10) train acc: 0.608022; val_acc: 0.593400\n","[2,   200] loss: 1.097\n","[2,   400] loss: 1.087\n","[2,   600] loss: 1.161\n","[2,   800] loss: 1.093\n","[2,  1000] loss: 1.135\n","[2,  1200] loss: 1.139\n","[2,  1400] loss: 1.087\n","[2,  1600] loss: 1.158\n","[2,  1800] loss: 1.122\n","[2,  2000] loss: 1.138\n","[2,  2200] loss: 1.060\n","[2,  2400] loss: 1.154\n","[2,  2600] loss: 1.093\n","[2,  2800] loss: 1.101\n","[2,  3000] loss: 1.051\n","[2,  3200] loss: 1.048\n","[2,  3400] loss: 1.137\n","[2,  3600] loss: 1.105\n","[2,  3800] loss: 1.088\n","[2,  4000] loss: 1.036\n","[2,  4200] loss: 1.008\n","[2,  4400] loss: 1.022\n","[2,  4600] loss: 1.059\n","[2,  4800] loss: 1.115\n","[2,  5000] loss: 1.019\n","[2,  5200] loss: 1.058\n","[2,  5400] loss: 0.985\n","[2,  5600] loss: 0.965\n","[2,  5800] loss: 1.084\n","[2,  6000] loss: 0.993\n","[2,  6200] loss: 1.017\n","[2,  6400] loss: 0.972\n","[2,  6600] loss: 1.096\n","[2,  6800] loss: 0.947\n","[2,  7000] loss: 0.996\n","[2,  7200] loss: 0.986\n","[2,  7400] loss: 1.008\n","[2,  7600] loss: 0.985\n","[2,  7800] loss: 0.967\n","[2,  8000] loss: 0.994\n","[2,  8200] loss: 0.976\n","[2,  8400] loss: 0.953\n","[2,  8600] loss: 0.979\n","[2,  8800] loss: 0.938\n","[2,  9000] loss: 0.953\n","[2,  9200] loss: 0.910\n","[2,  9400] loss: 0.967\n","[2,  9600] loss: 0.880\n","[2,  9800] loss: 1.066\n","[2, 10000] loss: 0.980\n","[2, 10200] loss: 0.931\n","[2, 10400] loss: 0.949\n","[2, 10600] loss: 0.902\n","[2, 10800] loss: 0.987\n","[2, 11000] loss: 0.968\n","[2, 11200] loss: 0.937\n","Accuracy of the network on the 12500 training images: 68 %\n","Accuracy of the network on the 12500 training images: 66 %\n","(Epoch 2 / 10) train acc: 0.687489; val_acc: 0.668400\n","[3,   200] loss: 0.872\n","[3,   400] loss: 0.939\n","[3,   600] loss: 0.898\n","[3,   800] loss: 0.885\n","[3,  1000] loss: 0.958\n","[3,  1200] loss: 0.855\n","[3,  1400] loss: 0.820\n","[3,  1600] loss: 0.902\n","[3,  1800] loss: 0.859\n","[3,  2000] loss: 0.886\n","[3,  2200] loss: 0.908\n","[3,  2400] loss: 0.871\n","[3,  2600] loss: 0.850\n","[3,  2800] loss: 0.894\n","[3,  3000] loss: 0.864\n","[3,  3200] loss: 0.873\n","[3,  3400] loss: 0.823\n","[3,  3600] loss: 0.823\n","[3,  3800] loss: 0.767\n","[3,  4000] loss: 0.815\n","[3,  4200] loss: 0.836\n","[3,  4400] loss: 0.869\n","[3,  4600] loss: 0.827\n","[3,  4800] loss: 0.828\n","[3,  5000] loss: 0.787\n","[3,  5200] loss: 0.853\n","[3,  5400] loss: 0.831\n","[3,  5600] loss: 0.776\n","[3,  5800] loss: 0.901\n","[3,  6000] loss: 0.772\n","[3,  6200] loss: 0.835\n","[3,  6400] loss: 0.855\n","[3,  6600] loss: 0.898\n","[3,  6800] loss: 0.824\n","[3,  7000] loss: 0.858\n","[3,  7200] loss: 0.834\n","[3,  7400] loss: 0.846\n","[3,  7600] loss: 0.825\n","[3,  7800] loss: 0.826\n","[3,  8000] loss: 0.859\n","[3,  8200] loss: 0.792\n","[3,  8400] loss: 0.787\n","[3,  8600] loss: 0.785\n","[3,  8800] loss: 0.800\n","[3,  9000] loss: 0.806\n","[3,  9200] loss: 0.775\n","[3,  9400] loss: 0.733\n","[3,  9600] loss: 0.745\n","[3,  9800] loss: 0.790\n","[3, 10000] loss: 0.784\n","[3, 10200] loss: 0.785\n","[3, 10400] loss: 0.769\n","[3, 10600] loss: 0.792\n","[3, 10800] loss: 0.827\n","[3, 11000] loss: 0.774\n","[3, 11200] loss: 0.828\n","Accuracy of the network on the 12500 training images: 75 %\n","Accuracy of the network on the 12500 training images: 72 %\n","(Epoch 3 / 10) train acc: 0.750644; val_acc: 0.720600\n","[4,   200] loss: 0.705\n","[4,   400] loss: 0.718\n","[4,   600] loss: 0.692\n","[4,   800] loss: 0.736\n","[4,  1000] loss: 0.761\n","[4,  1200] loss: 0.716\n","[4,  1400] loss: 0.701\n","[4,  1600] loss: 0.754\n","[4,  1800] loss: 0.694\n","[4,  2000] loss: 0.745\n","[4,  2200] loss: 0.694\n","[4,  2400] loss: 0.765\n","[4,  2600] loss: 0.652\n","[4,  2800] loss: 0.729\n","[4,  3000] loss: 0.724\n","[4,  3200] loss: 0.661\n","[4,  3400] loss: 0.750\n","[4,  3600] loss: 0.714\n","[4,  3800] loss: 0.724\n","[4,  4000] loss: 0.823\n","[4,  4200] loss: 0.725\n","[4,  4400] loss: 0.713\n","[4,  4600] loss: 0.704\n","[4,  4800] loss: 0.734\n","[4,  5000] loss: 0.734\n","[4,  5200] loss: 0.728\n","[4,  5400] loss: 0.703\n","[4,  5600] loss: 0.730\n","[4,  5800] loss: 0.723\n","[4,  6000] loss: 0.711\n","[4,  6200] loss: 0.657\n","[4,  6400] loss: 0.715\n","[4,  6600] loss: 0.688\n","[4,  6800] loss: 0.711\n","[4,  7000] loss: 0.732\n","[4,  7200] loss: 0.730\n","[4,  7400] loss: 0.674\n","[4,  7600] loss: 0.724\n","[4,  7800] loss: 0.718\n","[4,  8000] loss: 0.720\n","[4,  8200] loss: 0.683\n","[4,  8400] loss: 0.683\n","[4,  8600] loss: 0.639\n","[4,  8800] loss: 0.668\n","[4,  9000] loss: 0.706\n","[4,  9200] loss: 0.700\n","[4,  9400] loss: 0.644\n","[4,  9600] loss: 0.675\n","[4,  9800] loss: 0.717\n","[4, 10000] loss: 0.645\n","[4, 10200] loss: 0.740\n","[4, 10400] loss: 0.687\n","[4, 10600] loss: 0.681\n","[4, 10800] loss: 0.645\n","[4, 11000] loss: 0.693\n","[4, 11200] loss: 0.710\n","Accuracy of the network on the 12500 training images: 77 %\n","Accuracy of the network on the 12500 training images: 74 %\n","(Epoch 4 / 10) train acc: 0.774622; val_acc: 0.743800\n","[5,   200] loss: 0.634\n","[5,   400] loss: 0.607\n","[5,   600] loss: 0.594\n","[5,   800] loss: 0.718\n","[5,  1000] loss: 0.608\n","[5,  1200] loss: 0.653\n","[5,  1400] loss: 0.652\n","[5,  1600] loss: 0.670\n","[5,  1800] loss: 0.624\n","[5,  2000] loss: 0.641\n","[5,  2200] loss: 0.585\n","[5,  2400] loss: 0.628\n","[5,  2600] loss: 0.642\n","[5,  2800] loss: 0.608\n","[5,  3000] loss: 0.621\n","[5,  3200] loss: 0.581\n","[5,  3400] loss: 0.606\n","[5,  3600] loss: 0.652\n","[5,  3800] loss: 0.577\n","[5,  4000] loss: 0.619\n","[5,  4200] loss: 0.625\n","[5,  4400] loss: 0.592\n","[5,  4600] loss: 0.590\n","[5,  4800] loss: 0.651\n","[5,  5000] loss: 0.654\n","[5,  5200] loss: 0.583\n","[5,  5400] loss: 0.624\n","[5,  5600] loss: 0.612\n","[5,  5800] loss: 0.626\n","[5,  6000] loss: 0.596\n","[5,  6200] loss: 0.572\n","[5,  6400] loss: 0.645\n","[5,  6600] loss: 0.603\n","[5,  6800] loss: 0.690\n","[5,  7000] loss: 0.731\n","[5,  7200] loss: 0.630\n","[5,  7400] loss: 0.657\n","[5,  7600] loss: 0.636\n","[5,  7800] loss: 0.605\n","[5,  8000] loss: 0.654\n","[5,  8200] loss: 0.638\n","[5,  8400] loss: 0.611\n","[5,  8600] loss: 0.626\n","[5,  8800] loss: 0.599\n","[5,  9000] loss: 0.667\n","[5,  9200] loss: 0.621\n","[5,  9400] loss: 0.616\n","[5,  9600] loss: 0.553\n","[5,  9800] loss: 0.701\n","[5, 10000] loss: 0.621\n","[5, 10200] loss: 0.586\n","[5, 10400] loss: 0.550\n","[5, 10600] loss: 0.657\n","[5, 10800] loss: 0.645\n","[5, 11000] loss: 0.657\n","[5, 11200] loss: 0.598\n","Accuracy of the network on the 12500 training images: 80 %\n","Accuracy of the network on the 12500 training images: 77 %\n","(Epoch 5 / 10) train acc: 0.805311; val_acc: 0.773800\n","[6,   200] loss: 0.544\n","[6,   400] loss: 0.523\n","[6,   600] loss: 0.535\n","[6,   800] loss: 0.584\n","[6,  1000] loss: 0.612\n","[6,  1200] loss: 0.583\n","[6,  1400] loss: 0.507\n","[6,  1600] loss: 0.514\n","[6,  1800] loss: 0.544\n","[6,  2000] loss: 0.555\n","[6,  2200] loss: 0.518\n","[6,  2400] loss: 0.600\n","[6,  2600] loss: 0.565\n","[6,  2800] loss: 0.512\n","[6,  3000] loss: 0.519\n","[6,  3200] loss: 0.629\n","[6,  3400] loss: 0.531\n","[6,  3600] loss: 0.596\n","[6,  3800] loss: 0.524\n","[6,  4000] loss: 0.589\n","[6,  4200] loss: 0.533\n","[6,  4400] loss: 0.531\n","[6,  4600] loss: 0.567\n","[6,  4800] loss: 0.563\n","[6,  5000] loss: 0.537\n","[6,  5200] loss: 0.554\n","[6,  5400] loss: 0.532\n","[6,  5600] loss: 0.577\n","[6,  5800] loss: 0.536\n","[6,  6000] loss: 0.593\n","[6,  6200] loss: 0.591\n","[6,  6400] loss: 0.537\n","[6,  6600] loss: 0.515\n","[6,  6800] loss: 0.576\n","[6,  7000] loss: 0.553\n","[6,  7200] loss: 0.609\n","[6,  7400] loss: 0.513\n","[6,  7600] loss: 0.561\n","[6,  7800] loss: 0.512\n","[6,  8000] loss: 0.558\n","[6,  8200] loss: 0.533\n","[6,  8400] loss: 0.537\n","[6,  8600] loss: 0.563\n","[6,  8800] loss: 0.580\n","[6,  9000] loss: 0.520\n","[6,  9200] loss: 0.558\n","[6,  9400] loss: 0.480\n","[6,  9600] loss: 0.539\n","[6,  9800] loss: 0.585\n","[6, 10000] loss: 0.566\n","[6, 10200] loss: 0.611\n","[6, 10400] loss: 0.584\n","[6, 10600] loss: 0.519\n","[6, 10800] loss: 0.471\n","[6, 11000] loss: 0.565\n","[6, 11200] loss: 0.615\n","Accuracy of the network on the 12500 training images: 84 %\n","Accuracy of the network on the 12500 training images: 78 %\n","(Epoch 6 / 10) train acc: 0.841422; val_acc: 0.787600\n","[7,   200] loss: 0.509\n","[7,   400] loss: 0.536\n","[7,   600] loss: 0.533\n","[7,   800] loss: 0.542\n","[7,  1000] loss: 0.449\n","[7,  1200] loss: 0.435\n","[7,  1400] loss: 0.498\n","[7,  1600] loss: 0.436\n","[7,  1800] loss: 0.479\n","[7,  2000] loss: 0.439\n","[7,  2200] loss: 0.505\n","[7,  2400] loss: 0.463\n","[7,  2600] loss: 0.528\n","[7,  2800] loss: 0.522\n","[7,  3000] loss: 0.465\n","[7,  3200] loss: 0.487\n","[7,  3400] loss: 0.491\n","[7,  3600] loss: 0.485\n","[7,  3800] loss: 0.539\n","[7,  4000] loss: 0.456\n","[7,  4200] loss: 0.513\n","[7,  4400] loss: 0.468\n","[7,  4600] loss: 0.509\n","[7,  4800] loss: 0.477\n","[7,  5000] loss: 0.460\n","[7,  5200] loss: 0.533\n","[7,  5400] loss: 0.498\n","[7,  5600] loss: 0.501\n","[7,  5800] loss: 0.447\n","[7,  6000] loss: 0.453\n","[7,  6200] loss: 0.528\n","[7,  6400] loss: 0.492\n","[7,  6600] loss: 0.517\n","[7,  6800] loss: 0.490\n","[7,  7000] loss: 0.468\n","[7,  7200] loss: 0.478\n","[7,  7400] loss: 0.521\n","[7,  7600] loss: 0.546\n","[7,  7800] loss: 0.517\n","[7,  8000] loss: 0.525\n","[7,  8200] loss: 0.483\n","[7,  8400] loss: 0.511\n","[7,  8600] loss: 0.490\n","[7,  8800] loss: 0.547\n","[7,  9000] loss: 0.492\n","[7,  9200] loss: 0.457\n","[7,  9400] loss: 0.513\n","[7,  9600] loss: 0.498\n","[7,  9800] loss: 0.511\n","[7, 10000] loss: 0.519\n","[7, 10200] loss: 0.460\n","[7, 10400] loss: 0.494\n","[7, 10600] loss: 0.461\n","[7, 10800] loss: 0.516\n","[7, 11000] loss: 0.533\n","[7, 11200] loss: 0.487\n","Accuracy of the network on the 12500 training images: 85 %\n","Accuracy of the network on the 12500 training images: 78 %\n","(Epoch 7 / 10) train acc: 0.856600; val_acc: 0.789800\n","[8,   200] loss: 0.409\n","[8,   400] loss: 0.450\n","[8,   600] loss: 0.436\n","[8,   800] loss: 0.420\n","[8,  1000] loss: 0.443\n","[8,  1200] loss: 0.421\n","[8,  1400] loss: 0.396\n","[8,  1600] loss: 0.457\n","[8,  1800] loss: 0.433\n","[8,  2000] loss: 0.469\n","[8,  2200] loss: 0.440\n","[8,  2400] loss: 0.462\n","[8,  2600] loss: 0.420\n","[8,  2800] loss: 0.405\n","[8,  3000] loss: 0.450\n","[8,  3200] loss: 0.413\n","[8,  3400] loss: 0.517\n","[8,  3600] loss: 0.407\n","[8,  3800] loss: 0.435\n","[8,  4000] loss: 0.399\n","[8,  4200] loss: 0.440\n","[8,  4400] loss: 0.405\n","[8,  4600] loss: 0.469\n","[8,  4800] loss: 0.434\n","[8,  5000] loss: 0.442\n","[8,  5200] loss: 0.540\n","[8,  5400] loss: 0.435\n","[8,  5600] loss: 0.431\n","[8,  5800] loss: 0.415\n","[8,  6000] loss: 0.409\n","[8,  6200] loss: 0.417\n","[8,  6400] loss: 0.435\n","[8,  6600] loss: 0.471\n","[8,  6800] loss: 0.475\n","[8,  7000] loss: 0.486\n","[8,  7200] loss: 0.395\n","[8,  7400] loss: 0.477\n","[8,  7600] loss: 0.481\n","[8,  7800] loss: 0.482\n","[8,  8000] loss: 0.436\n","[8,  8200] loss: 0.462\n","[8,  8400] loss: 0.462\n","[8,  8600] loss: 0.468\n","[8,  8800] loss: 0.419\n","[8,  9000] loss: 0.478\n","[8,  9200] loss: 0.442\n","[8,  9400] loss: 0.474\n","[8,  9600] loss: 0.471\n","[8,  9800] loss: 0.465\n","[8, 10000] loss: 0.434\n","[8, 10200] loss: 0.431\n","[8, 10400] loss: 0.472\n","[8, 10600] loss: 0.463\n","[8, 10800] loss: 0.489\n","[8, 11000] loss: 0.417\n","[8, 11200] loss: 0.492\n","Accuracy of the network on the 12500 training images: 87 %\n","Accuracy of the network on the 12500 training images: 80 %\n","(Epoch 8 / 10) train acc: 0.874156; val_acc: 0.802000\n","[9,   200] loss: 0.390\n","[9,   400] loss: 0.417\n","[9,   600] loss: 0.368\n","[9,   800] loss: 0.386\n","[9,  1000] loss: 0.406\n","[9,  1200] loss: 0.395\n","[9,  1400] loss: 0.392\n","[9,  1600] loss: 0.409\n","[9,  1800] loss: 0.376\n","[9,  2000] loss: 0.370\n","[9,  2200] loss: 0.404\n","[9,  2400] loss: 0.381\n","[9,  2600] loss: 0.444\n","[9,  2800] loss: 0.373\n","[9,  3000] loss: 0.446\n","[9,  3200] loss: 0.393\n","[9,  3400] loss: 0.424\n","[9,  3600] loss: 0.418\n","[9,  3800] loss: 0.373\n","[9,  4000] loss: 0.404\n","[9,  4200] loss: 0.376\n","[9,  4400] loss: 0.410\n","[9,  4600] loss: 0.423\n","[9,  4800] loss: 0.412\n","[9,  5000] loss: 0.395\n","[9,  5200] loss: 0.391\n","[9,  5400] loss: 0.391\n","[9,  5600] loss: 0.374\n","[9,  5800] loss: 0.343\n","[9,  6000] loss: 0.356\n","[9,  6200] loss: 0.414\n","[9,  6400] loss: 0.401\n","[9,  6600] loss: 0.405\n","[9,  6800] loss: 0.445\n","[9,  7000] loss: 0.438\n","[9,  7200] loss: 0.443\n","[9,  7400] loss: 0.360\n","[9,  7600] loss: 0.389\n","[9,  7800] loss: 0.443\n","[9,  8000] loss: 0.386\n","[9,  8200] loss: 0.403\n","[9,  8400] loss: 0.398\n","[9,  8600] loss: 0.446\n","[9,  8800] loss: 0.360\n","[9,  9000] loss: 0.357\n","[9,  9200] loss: 0.403\n","[9,  9400] loss: 0.403\n","[9,  9600] loss: 0.380\n","[9,  9800] loss: 0.439\n","[9, 10000] loss: 0.393\n","[9, 10200] loss: 0.404\n","[9, 10400] loss: 0.435\n","[9, 10600] loss: 0.378\n","[9, 10800] loss: 0.380\n","[9, 11000] loss: 0.397\n","[9, 11200] loss: 0.410\n","Accuracy of the network on the 12500 training images: 89 %\n","Accuracy of the network on the 12500 training images: 80 %\n","(Epoch 9 / 10) train acc: 0.893844; val_acc: 0.804800\n","[10,   200] loss: 0.299\n","[10,   400] loss: 0.329\n","[10,   600] loss: 0.322\n","[10,   800] loss: 0.307\n","[10,  1000] loss: 0.332\n","[10,  1200] loss: 0.346\n","[10,  1400] loss: 0.379\n","[10,  1600] loss: 0.388\n","[10,  1800] loss: 0.344\n","[10,  2000] loss: 0.320\n","[10,  2200] loss: 0.314\n","[10,  2400] loss: 0.373\n","[10,  2600] loss: 0.389\n","[10,  2800] loss: 0.374\n","[10,  3000] loss: 0.389\n","[10,  3200] loss: 0.348\n","[10,  3400] loss: 0.328\n","[10,  3600] loss: 0.382\n","[10,  3800] loss: 0.352\n","[10,  4000] loss: 0.328\n","[10,  4200] loss: 0.306\n","[10,  4400] loss: 0.372\n","[10,  4600] loss: 0.359\n","[10,  4800] loss: 0.372\n","[10,  5000] loss: 0.355\n","[10,  5200] loss: 0.345\n","[10,  5400] loss: 0.355\n","[10,  5600] loss: 0.342\n","[10,  5800] loss: 0.366\n","[10,  6000] loss: 0.377\n","[10,  6200] loss: 0.381\n","[10,  6400] loss: 0.371\n","[10,  6600] loss: 0.415\n","[10,  6800] loss: 0.367\n","[10,  7000] loss: 0.347\n","[10,  7200] loss: 0.377\n","[10,  7400] loss: 0.350\n","[10,  7600] loss: 0.353\n","[10,  7800] loss: 0.358\n","[10,  8000] loss: 0.347\n","[10,  8200] loss: 0.351\n","[10,  8400] loss: 0.410\n","[10,  8600] loss: 0.337\n","[10,  8800] loss: 0.373\n","[10,  9000] loss: 0.381\n","[10,  9200] loss: 0.379\n","[10,  9400] loss: 0.370\n","[10,  9600] loss: 0.353\n","[10,  9800] loss: 0.374\n","[10, 10000] loss: 0.395\n","[10, 10200] loss: 0.379\n","[10, 10400] loss: 0.368\n","[10, 10600] loss: 0.390\n","[10, 10800] loss: 0.357\n","[10, 11000] loss: 0.363\n","[10, 11200] loss: 0.394\n","Accuracy of the network on the 12500 training images: 89 %\n","Accuracy of the network on the 12500 training images: 78 %\n","(Epoch 10 / 10) train acc: 0.890600; val_acc: 0.787000\n","Finished Training\n"]}]},{"cell_type":"code","source":["predict_accuracy(model_flood,testloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"kptyBwbz1Lo5","executionInfo":{"status":"ok","timestamp":1678783779360,"user_tz":420,"elapsed":20200,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"33d6b7f0-dbe6-4489-ea32-7d578901daf4"},"execution_count":67,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of the network on the 12500 training images: 79 %\n"]},{"output_type":"execute_result","data":{"text/plain":["(7900, 10000, 0.79)"]},"metadata":{},"execution_count":67}]},{"cell_type":"code","source":["torch.save(model.state_dict(),'resnet_adam_flood_0.05_fully_trained.pt')"],"metadata":{"id":"XaDCsKpM1LmM","executionInfo":{"status":"ok","timestamp":1678783829256,"user_tz":420,"elapsed":196,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"execution_count":68,"outputs":[]},{"cell_type":"code","source":["torch.save(best_params,'Best_params_flood_0.05.pt') #f is something like 'resnet_nest_flood_bpoint15.pt'\n","model.load_state_dict(torch.load('Best_params_flood_0.05.pt'))\n","predict_accuracy(model_flood,testloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"wtMvo3tK1LjZ","executionInfo":{"status":"ok","timestamp":1678783852009,"user_tz":420,"elapsed":21050,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"bc4fb818-63b6-4d16-ba15-f8467222787f"},"execution_count":69,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of the network on the 12500 training images: 79 %\n"]},{"output_type":"execute_result","data":{"text/plain":["(7942, 10000, 0.7942)"]},"metadata":{},"execution_count":69}]},{"cell_type":"code","source":["plt.plot(loss_values_flood,label='Training')\n","plt.xlabel('Iterations')\n","plt.ylabel('Loss')\n","plt.legend();\n","plt.title('Resnet-20 Flood Loss with b=0.05')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"X_X4ZSvM1Lgp","executionInfo":{"status":"ok","timestamp":1678783852009,"user_tz":420,"elapsed":24,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"0dbd2e8a-d0ce-4c44-9322-2120c670bfb5"},"execution_count":70,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Resnet-20 Flood Loss with b=0.05')"]},"metadata":{},"execution_count":70},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.plot(accuracies_flood,label='Training');\n","plt.plot(val_accuracy_flood,label='Validation');\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","plt.legend();\n","plt.title('Resnet-20 Flood Accuracy with b=0.05')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":313},"id":"Wvrcyp_d1LZR","executionInfo":{"status":"ok","timestamp":1678783852360,"user_tz":420,"elapsed":370,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"8146a470-6829-4174-fd46-2de92bc1ce05"},"execution_count":71,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Resnet-20 Flood Accuracy with b=0.05')"]},"metadata":{},"execution_count":71},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["fig, (axs1,axs2) = plt.subplots(1, 2, figsize=(15,5))\n","fig.suptitle('Resnet-20 Loss with Adam')\n","\n","                      \n","axs1.plot(loss_values_flood,label='Training')\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","axs1.legend();\n","\n","axs2.plot(accuracies_flood,label='Training');\n","axs2.plot(val_accuracy_flood,label='Validation');\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","axs2.legend();"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":370},"id":"hwVepiQU1LPl","executionInfo":{"status":"ok","timestamp":1678784770112,"user_tz":420,"elapsed":1893,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"7a04b002-677f-4d66-c456-8e95444742a7"},"execution_count":89,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x360 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["# Trying for b=0.15"],"metadata":{"id":"kj9jbs2KX8d0"}},{"cell_type":"code","source":["# introduce flood model\n","model_flood = model=torch.hub.load(\"chenyaofo/pytorch-cifar-models\", \"cifar10_resnet20\", pretrained=False, trust_repo=True)\n","#model_flood\n","criterion = nn.CrossEntropyLoss()\n","optimizer_flood = optim.Adam(model_flood.parameters(), lr=0.001)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"LhWLFWzcXnrT","executionInfo":{"status":"ok","timestamp":1678784850767,"user_tz":420,"elapsed":558,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"4d8ac041-5f9f-4b19-dca4-e7d71bdf2cb6"},"execution_count":90,"outputs":[{"output_type":"stream","name":"stderr","text":["Using cache found in /root/.cache/torch/hub/chenyaofo_pytorch-cifar-models_master\n"]}]},{"cell_type":"code","source":["b=0.15 #medium\n","loss_values_flood = []\n","accuracies_flood = []\n","val_accuracy_flood = []\n","best_val_acc_flood = 0\n","for epoch in range(10):  # loop over the dataset multiple times\n","    total = 0\n","    correct = 0\n","\n","    running_loss = 0.0\n","    for i, data in enumerate(trainloader, 0):\n","        # get the inputs\n","        inputs, labels = data\n","\n","        # zero the parameter gradients\n","        optimizer_flood.zero_grad()\n","\n","        # forward + backward + optimize\n","        outputs = model_flood(inputs)\n","        loss = criterion(outputs, labels)\n","        # I would like to identify the point where loss dips below b\n","        #if loss < b:\n","        # print(\"Loss %f below b\"%(loss))\n","        flood = (loss-b).abs()+b  #try for various values of b\n","        flood.backward()\n","        optimizer_flood.step()\n","\n","        # print statistics\n","        running_loss += loss.item()\n","        loss_values_flood.append(loss.item())\n","        if i % 200 == 199:  # print every 200 mini-batches\n","            print('[%d, %5d] loss: %.3f' %\n","                  (epoch + 1, i + 1, running_loss / 200))\n","            running_loss = 0.0\n","    # caculate accuracy\n","    train_correct, train_total, train_acc = predict_accuracy(model_flood, trainloader)\n","    ## calculate validation accuracy\n","    val_correct, val_total, val_acc = predict_accuracy(model_flood, validloader)\n","    accuracies_flood.append(train_acc)\n","    val_accuracy_flood.append(val_acc)\n","\n","    print('(Epoch %d / %d) train acc: %f; val_acc: %f' % (epoch+1, 10, train_acc, val_acc))\n","\n","    # retain best parameters\n","    if val_acc > best_val_acc_flood:\n","        best_val_acc_flood = val_acc\n","        best_params = model.state_dict()\n","        filnam = 'resnet_adam_flood'+str(b)+'.pt'\n","        filnam_loss = 'loss_res_adam_flood'+str(b)+'.txt'\n","        save_checkpoint(model, filnam, loss_values, filnam_loss)\n","\n","print(\"Best Val accuracy\",best_val_acc_flood)\n","print('Finished Training')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"EL8j63NlXnos","executionInfo":{"status":"ok","timestamp":1678788575282,"user_tz":420,"elapsed":3602245,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"41365716-973a-426a-e2bb-a46ef9e60923"},"execution_count":91,"outputs":[{"output_type":"stream","name":"stdout","text":["[1,   200] loss: 2.209\n","[1,   400] loss: 1.990\n","[1,   600] loss: 1.992\n","[1,   800] loss: 1.935\n","[1,  1000] loss: 1.900\n","[1,  1200] loss: 1.896\n","[1,  1400] loss: 1.871\n","[1,  1600] loss: 1.826\n","[1,  1800] loss: 1.770\n","[1,  2000] loss: 1.809\n","[1,  2200] loss: 1.738\n","[1,  2400] loss: 1.781\n","[1,  2600] loss: 1.711\n","[1,  2800] loss: 1.638\n","[1,  3000] loss: 1.721\n","[1,  3200] loss: 1.705\n","[1,  3400] loss: 1.685\n","[1,  3600] loss: 1.610\n","[1,  3800] loss: 1.643\n","[1,  4000] loss: 1.536\n","[1,  4200] loss: 1.529\n","[1,  4400] loss: 1.594\n","[1,  4600] loss: 1.550\n","[1,  4800] loss: 1.537\n","[1,  5000] loss: 1.507\n","[1,  5200] loss: 1.477\n","[1,  5400] loss: 1.482\n","[1,  5600] loss: 1.470\n","[1,  5800] loss: 1.501\n","[1,  6000] loss: 1.461\n","[1,  6200] loss: 1.473\n","[1,  6400] loss: 1.441\n","[1,  6600] loss: 1.367\n","[1,  6800] loss: 1.421\n","[1,  7000] loss: 1.440\n","[1,  7200] loss: 1.338\n","[1,  7400] loss: 1.369\n","[1,  7600] loss: 1.309\n","[1,  7800] loss: 1.292\n","[1,  8000] loss: 1.318\n","[1,  8200] loss: 1.268\n","[1,  8400] loss: 1.339\n","[1,  8600] loss: 1.353\n","[1,  8800] loss: 1.229\n","[1,  9000] loss: 1.279\n","[1,  9200] loss: 1.237\n","[1,  9400] loss: 1.294\n","[1,  9600] loss: 1.289\n","[1,  9800] loss: 1.242\n","[1, 10000] loss: 1.233\n","[1, 10200] loss: 1.266\n","[1, 10400] loss: 1.261\n","[1, 10600] loss: 1.225\n","[1, 10800] loss: 1.185\n","[1, 11000] loss: 1.161\n","[1, 11200] loss: 1.230\n","Accuracy of the network on the 12500 training images: 57 %\n","Accuracy of the network on the 12500 training images: 56 %\n","(Epoch 1 / 10) train acc: 0.576600; val_acc: 0.564400\n","[2,   200] loss: 1.093\n","[2,   400] loss: 1.172\n","[2,   600] loss: 1.151\n","[2,   800] loss: 1.198\n","[2,  1000] loss: 1.155\n","[2,  1200] loss: 1.171\n","[2,  1400] loss: 1.224\n","[2,  1600] loss: 1.171\n","[2,  1800] loss: 1.138\n","[2,  2000] loss: 1.101\n","[2,  2200] loss: 1.124\n","[2,  2400] loss: 1.083\n","[2,  2600] loss: 1.040\n","[2,  2800] loss: 1.034\n","[2,  3000] loss: 1.022\n","[2,  3200] loss: 1.046\n","[2,  3400] loss: 1.094\n","[2,  3600] loss: 1.114\n","[2,  3800] loss: 1.072\n","[2,  4000] loss: 1.089\n","[2,  4200] loss: 1.011\n","[2,  4400] loss: 1.050\n","[2,  4600] loss: 1.038\n","[2,  4800] loss: 1.074\n","[2,  5000] loss: 1.044\n","[2,  5200] loss: 1.045\n","[2,  5400] loss: 0.976\n","[2,  5600] loss: 1.016\n","[2,  5800] loss: 0.970\n","[2,  6000] loss: 1.008\n","[2,  6200] loss: 1.039\n","[2,  6400] loss: 0.957\n","[2,  6600] loss: 1.014\n","[2,  6800] loss: 0.984\n","[2,  7000] loss: 1.031\n","[2,  7200] loss: 1.029\n","[2,  7400] loss: 0.959\n","[2,  7600] loss: 0.990\n","[2,  7800] loss: 1.030\n","[2,  8000] loss: 0.974\n","[2,  8200] loss: 1.014\n","[2,  8400] loss: 0.980\n","[2,  8600] loss: 0.973\n","[2,  8800] loss: 0.961\n","[2,  9000] loss: 1.081\n","[2,  9200] loss: 0.986\n","[2,  9400] loss: 0.997\n","[2,  9600] loss: 0.928\n","[2,  9800] loss: 0.982\n","[2, 10000] loss: 0.927\n","[2, 10200] loss: 0.845\n","[2, 10400] loss: 0.918\n","[2, 10600] loss: 0.922\n","[2, 10800] loss: 0.966\n","[2, 11000] loss: 0.876\n","[2, 11200] loss: 0.909\n","Accuracy of the network on the 12500 training images: 68 %\n","Accuracy of the network on the 12500 training images: 66 %\n","(Epoch 2 / 10) train acc: 0.685822; val_acc: 0.663000\n","[3,   200] loss: 0.950\n","[3,   400] loss: 0.936\n","[3,   600] loss: 0.930\n","[3,   800] loss: 0.843\n","[3,  1000] loss: 0.836\n","[3,  1200] loss: 0.973\n","[3,  1400] loss: 0.837\n","[3,  1600] loss: 0.952\n","[3,  1800] loss: 0.845\n","[3,  2000] loss: 0.847\n","[3,  2200] loss: 0.869\n","[3,  2400] loss: 0.874\n","[3,  2600] loss: 0.868\n","[3,  2800] loss: 0.884\n","[3,  3000] loss: 0.862\n","[3,  3200] loss: 0.887\n","[3,  3400] loss: 0.807\n","[3,  3600] loss: 0.874\n","[3,  3800] loss: 0.841\n","[3,  4000] loss: 0.812\n","[3,  4200] loss: 0.796\n","[3,  4400] loss: 0.847\n","[3,  4600] loss: 0.822\n","[3,  4800] loss: 0.861\n","[3,  5000] loss: 0.779\n","[3,  5200] loss: 0.867\n","[3,  5400] loss: 0.896\n","[3,  5600] loss: 0.830\n","[3,  5800] loss: 0.858\n","[3,  6000] loss: 0.844\n","[3,  6200] loss: 0.847\n","[3,  6400] loss: 0.789\n","[3,  6600] loss: 0.792\n","[3,  6800] loss: 0.866\n","[3,  7000] loss: 0.806\n","[3,  7200] loss: 0.774\n","[3,  7400] loss: 0.858\n","[3,  7600] loss: 0.889\n","[3,  7800] loss: 0.813\n","[3,  8000] loss: 0.753\n","[3,  8200] loss: 0.787\n","[3,  8400] loss: 0.811\n","[3,  8600] loss: 0.849\n","[3,  8800] loss: 0.799\n","[3,  9000] loss: 0.756\n","[3,  9200] loss: 0.859\n","[3,  9400] loss: 0.785\n","[3,  9600] loss: 0.805\n","[3,  9800] loss: 0.832\n","[3, 10000] loss: 0.860\n","[3, 10200] loss: 0.706\n","[3, 10400] loss: 0.778\n","[3, 10600] loss: 0.770\n","[3, 10800] loss: 0.804\n","[3, 11000] loss: 0.819\n","[3, 11200] loss: 0.768\n","Accuracy of the network on the 12500 training images: 75 %\n","Accuracy of the network on the 12500 training images: 72 %\n","(Epoch 3 / 10) train acc: 0.752378; val_acc: 0.725000\n","[4,   200] loss: 0.747\n","[4,   400] loss: 0.732\n","[4,   600] loss: 0.725\n","[4,   800] loss: 0.710\n","[4,  1000] loss: 0.681\n","[4,  1200] loss: 0.680\n","[4,  1400] loss: 0.722\n","[4,  1600] loss: 0.738\n","[4,  1800] loss: 0.718\n","[4,  2000] loss: 0.663\n","[4,  2200] loss: 0.710\n","[4,  2400] loss: 0.733\n","[4,  2600] loss: 0.760\n","[4,  2800] loss: 0.794\n","[4,  3000] loss: 0.747\n","[4,  3200] loss: 0.668\n","[4,  3400] loss: 0.742\n","[4,  3600] loss: 0.734\n","[4,  3800] loss: 0.707\n","[4,  4000] loss: 0.652\n","[4,  4200] loss: 0.665\n","[4,  4400] loss: 0.758\n","[4,  4600] loss: 0.705\n","[4,  4800] loss: 0.781\n","[4,  5000] loss: 0.658\n","[4,  5200] loss: 0.696\n","[4,  5400] loss: 0.711\n","[4,  5600] loss: 0.722\n","[4,  5800] loss: 0.689\n","[4,  6000] loss: 0.731\n","[4,  6200] loss: 0.681\n","[4,  6400] loss: 0.679\n","[4,  6600] loss: 0.703\n","[4,  6800] loss: 0.718\n","[4,  7000] loss: 0.702\n","[4,  7200] loss: 0.735\n","[4,  7400] loss: 0.687\n","[4,  7600] loss: 0.733\n","[4,  7800] loss: 0.676\n","[4,  8000] loss: 0.735\n","[4,  8200] loss: 0.682\n","[4,  8400] loss: 0.734\n","[4,  8600] loss: 0.694\n","[4,  8800] loss: 0.715\n","[4,  9000] loss: 0.714\n","[4,  9200] loss: 0.754\n","[4,  9400] loss: 0.693\n","[4,  9600] loss: 0.715\n","[4,  9800] loss: 0.693\n","[4, 10000] loss: 0.749\n","[4, 10200] loss: 0.687\n","[4, 10400] loss: 0.705\n","[4, 10600] loss: 0.791\n","[4, 10800] loss: 0.745\n","[4, 11000] loss: 0.661\n","[4, 11200] loss: 0.741\n","Accuracy of the network on the 12500 training images: 77 %\n","Accuracy of the network on the 12500 training images: 73 %\n","(Epoch 4 / 10) train acc: 0.770733; val_acc: 0.735800\n","[5,   200] loss: 0.615\n","[5,   400] loss: 0.548\n","[5,   600] loss: 0.633\n","[5,   800] loss: 0.610\n","[5,  1000] loss: 0.608\n","[5,  1200] loss: 0.632\n","[5,  1400] loss: 0.655\n","[5,  1600] loss: 0.664\n","[5,  1800] loss: 0.693\n","[5,  2000] loss: 0.653\n","[5,  2200] loss: 0.637\n","[5,  2400] loss: 0.610\n","[5,  2600] loss: 0.592\n","[5,  2800] loss: 0.614\n","[5,  3000] loss: 0.662\n","[5,  3200] loss: 0.687\n","[5,  3400] loss: 0.568\n","[5,  3600] loss: 0.668\n","[5,  3800] loss: 0.637\n","[5,  4000] loss: 0.640\n","[5,  4200] loss: 0.676\n","[5,  4400] loss: 0.712\n","[5,  4600] loss: 0.625\n","[5,  4800] loss: 0.629\n","[5,  5000] loss: 0.617\n","[5,  5200] loss: 0.666\n","[5,  5400] loss: 0.621\n","[5,  5600] loss: 0.594\n","[5,  5800] loss: 0.592\n","[5,  6000] loss: 0.608\n","[5,  6200] loss: 0.607\n","[5,  6400] loss: 0.569\n","[5,  6600] loss: 0.603\n","[5,  6800] loss: 0.649\n","[5,  7000] loss: 0.583\n","[5,  7200] loss: 0.597\n","[5,  7400] loss: 0.625\n","[5,  7600] loss: 0.608\n","[5,  7800] loss: 0.623\n","[5,  8000] loss: 0.584\n","[5,  8200] loss: 0.635\n","[5,  8400] loss: 0.684\n","[5,  8600] loss: 0.652\n","[5,  8800] loss: 0.619\n","[5,  9000] loss: 0.597\n","[5,  9200] loss: 0.574\n","[5,  9400] loss: 0.645\n","[5,  9600] loss: 0.567\n","[5,  9800] loss: 0.590\n","[5, 10000] loss: 0.568\n","[5, 10200] loss: 0.601\n","[5, 10400] loss: 0.613\n","[5, 10600] loss: 0.619\n","[5, 10800] loss: 0.600\n","[5, 11000] loss: 0.611\n","[5, 11200] loss: 0.636\n","Accuracy of the network on the 12500 training images: 81 %\n","Accuracy of the network on the 12500 training images: 76 %\n","(Epoch 5 / 10) train acc: 0.817800; val_acc: 0.768000\n","[6,   200] loss: 0.571\n","[6,   400] loss: 0.557\n","[6,   600] loss: 0.575\n","[6,   800] loss: 0.513\n","[6,  1000] loss: 0.586\n","[6,  1200] loss: 0.542\n","[6,  1400] loss: 0.551\n","[6,  1600] loss: 0.552\n","[6,  1800] loss: 0.564\n","[6,  2000] loss: 0.603\n","[6,  2200] loss: 0.626\n","[6,  2400] loss: 0.572\n","[6,  2600] loss: 0.554\n","[6,  2800] loss: 0.578\n","[6,  3000] loss: 0.539\n","[6,  3200] loss: 0.546\n","[6,  3400] loss: 0.550\n","[6,  3600] loss: 0.497\n","[6,  3800] loss: 0.558\n","[6,  4000] loss: 0.537\n","[6,  4200] loss: 0.579\n","[6,  4400] loss: 0.591\n","[6,  4600] loss: 0.583\n","[6,  4800] loss: 0.535\n","[6,  5000] loss: 0.555\n","[6,  5200] loss: 0.581\n","[6,  5400] loss: 0.598\n","[6,  5600] loss: 0.567\n","[6,  5800] loss: 0.527\n","[6,  6000] loss: 0.566\n","[6,  6200] loss: 0.593\n","[6,  6400] loss: 0.546\n","[6,  6600] loss: 0.622\n","[6,  6800] loss: 0.572\n","[6,  7000] loss: 0.567\n","[6,  7200] loss: 0.544\n","[6,  7400] loss: 0.562\n","[6,  7600] loss: 0.557\n","[6,  7800] loss: 0.490\n","[6,  8000] loss: 0.563\n","[6,  8200] loss: 0.591\n","[6,  8400] loss: 0.611\n","[6,  8600] loss: 0.582\n","[6,  8800] loss: 0.542\n","[6,  9000] loss: 0.564\n","[6,  9200] loss: 0.621\n","[6,  9400] loss: 0.534\n","[6,  9600] loss: 0.546\n","[6,  9800] loss: 0.546\n","[6, 10000] loss: 0.552\n","[6, 10200] loss: 0.499\n","[6, 10400] loss: 0.523\n","[6, 10600] loss: 0.485\n","[6, 10800] loss: 0.539\n","[6, 11000] loss: 0.580\n","[6, 11200] loss: 0.547\n","Accuracy of the network on the 12500 training images: 83 %\n","Accuracy of the network on the 12500 training images: 77 %\n","(Epoch 6 / 10) train acc: 0.839044; val_acc: 0.776200\n","[7,   200] loss: 0.532\n","[7,   400] loss: 0.542\n","[7,   600] loss: 0.504\n","[7,   800] loss: 0.484\n","[7,  1000] loss: 0.485\n","[7,  1200] loss: 0.469\n","[7,  1400] loss: 0.471\n","[7,  1600] loss: 0.567\n","[7,  1800] loss: 0.522\n","[7,  2000] loss: 0.509\n","[7,  2200] loss: 0.492\n","[7,  2400] loss: 0.553\n","[7,  2600] loss: 0.471\n","[7,  2800] loss: 0.464\n","[7,  3000] loss: 0.498\n","[7,  3200] loss: 0.443\n","[7,  3400] loss: 0.528\n","[7,  3600] loss: 0.544\n","[7,  3800] loss: 0.524\n","[7,  4000] loss: 0.527\n","[7,  4200] loss: 0.514\n","[7,  4400] loss: 0.546\n","[7,  4600] loss: 0.461\n","[7,  4800] loss: 0.524\n","[7,  5000] loss: 0.480\n","[7,  5200] loss: 0.461\n","[7,  5400] loss: 0.491\n","[7,  5600] loss: 0.474\n","[7,  5800] loss: 0.508\n","[7,  6000] loss: 0.490\n","[7,  6200] loss: 0.490\n","[7,  6400] loss: 0.484\n","[7,  6600] loss: 0.529\n","[7,  6800] loss: 0.514\n","[7,  7000] loss: 0.546\n","[7,  7200] loss: 0.509\n","[7,  7400] loss: 0.549\n","[7,  7600] loss: 0.544\n","[7,  7800] loss: 0.517\n","[7,  8000] loss: 0.530\n","[7,  8200] loss: 0.480\n","[7,  8400] loss: 0.488\n","[7,  8600] loss: 0.515\n","[7,  8800] loss: 0.497\n","[7,  9000] loss: 0.537\n","[7,  9200] loss: 0.479\n","[7,  9400] loss: 0.497\n","[7,  9600] loss: 0.526\n","[7,  9800] loss: 0.491\n","[7, 10000] loss: 0.503\n","[7, 10200] loss: 0.528\n","[7, 10400] loss: 0.484\n","[7, 10600] loss: 0.517\n","[7, 10800] loss: 0.503\n","[7, 11000] loss: 0.506\n","[7, 11200] loss: 0.490\n","Accuracy of the network on the 12500 training images: 85 %\n","Accuracy of the network on the 12500 training images: 79 %\n","(Epoch 7 / 10) train acc: 0.858222; val_acc: 0.791000\n","[8,   200] loss: 0.454\n","[8,   400] loss: 0.435\n","[8,   600] loss: 0.435\n","[8,   800] loss: 0.420\n","[8,  1000] loss: 0.411\n","[8,  1200] loss: 0.414\n","[8,  1400] loss: 0.468\n","[8,  1600] loss: 0.417\n","[8,  1800] loss: 0.486\n","[8,  2000] loss: 0.498\n","[8,  2200] loss: 0.481\n","[8,  2400] loss: 0.442\n","[8,  2600] loss: 0.430\n","[8,  2800] loss: 0.479\n","[8,  3000] loss: 0.473\n","[8,  3200] loss: 0.514\n","[8,  3400] loss: 0.454\n","[8,  3600] loss: 0.420\n","[8,  3800] loss: 0.465\n","[8,  4000] loss: 0.459\n","[8,  4200] loss: 0.454\n","[8,  4400] loss: 0.398\n","[8,  4600] loss: 0.500\n","[8,  4800] loss: 0.468\n","[8,  5000] loss: 0.444\n","[8,  5200] loss: 0.500\n","[8,  5400] loss: 0.469\n","[8,  5600] loss: 0.503\n","[8,  5800] loss: 0.496\n","[8,  6000] loss: 0.486\n","[8,  6200] loss: 0.467\n","[8,  6400] loss: 0.473\n","[8,  6600] loss: 0.522\n","[8,  6800] loss: 0.450\n","[8,  7000] loss: 0.397\n","[8,  7200] loss: 0.493\n","[8,  7400] loss: 0.417\n","[8,  7600] loss: 0.433\n","[8,  7800] loss: 0.476\n","[8,  8000] loss: 0.433\n","[8,  8200] loss: 0.438\n","[8,  8400] loss: 0.434\n","[8,  8600] loss: 0.435\n","[8,  8800] loss: 0.425\n","[8,  9000] loss: 0.443\n","[8,  9200] loss: 0.491\n","[8,  9400] loss: 0.488\n","[8,  9600] loss: 0.503\n","[8,  9800] loss: 0.453\n","[8, 10000] loss: 0.463\n","[8, 10200] loss: 0.451\n","[8, 10400] loss: 0.467\n","[8, 10600] loss: 0.430\n","[8, 10800] loss: 0.456\n","[8, 11000] loss: 0.449\n","[8, 11200] loss: 0.518\n","Accuracy of the network on the 12500 training images: 85 %\n","Accuracy of the network on the 12500 training images: 78 %\n","(Epoch 8 / 10) train acc: 0.852089; val_acc: 0.783600\n","[9,   200] loss: 0.404\n","[9,   400] loss: 0.397\n","[9,   600] loss: 0.404\n","[9,   800] loss: 0.376\n","[9,  1000] loss: 0.418\n","[9,  1200] loss: 0.398\n","[9,  1400] loss: 0.409\n","[9,  1600] loss: 0.374\n","[9,  1800] loss: 0.444\n","[9,  2000] loss: 0.423\n","[9,  2200] loss: 0.403\n","[9,  2400] loss: 0.404\n","[9,  2600] loss: 0.432\n","[9,  2800] loss: 0.451\n","[9,  3000] loss: 0.415\n","[9,  3200] loss: 0.432\n","[9,  3400] loss: 0.423\n","[9,  3600] loss: 0.404\n","[9,  3800] loss: 0.405\n","[9,  4000] loss: 0.360\n","[9,  4200] loss: 0.436\n","[9,  4400] loss: 0.425\n","[9,  4600] loss: 0.368\n","[9,  4800] loss: 0.413\n","[9,  5000] loss: 0.430\n","[9,  5200] loss: 0.414\n","[9,  5400] loss: 0.400\n","[9,  5600] loss: 0.455\n","[9,  5800] loss: 0.414\n","[9,  6000] loss: 0.469\n","[9,  6200] loss: 0.422\n","[9,  6400] loss: 0.398\n","[9,  6600] loss: 0.447\n","[9,  6800] loss: 0.398\n","[9,  7000] loss: 0.441\n","[9,  7200] loss: 0.427\n","[9,  7400] loss: 0.401\n","[9,  7600] loss: 0.440\n","[9,  7800] loss: 0.442\n","[9,  8000] loss: 0.402\n","[9,  8200] loss: 0.411\n","[9,  8400] loss: 0.396\n","[9,  8600] loss: 0.447\n","[9,  8800] loss: 0.439\n","[9,  9000] loss: 0.372\n","[9,  9200] loss: 0.420\n","[9,  9400] loss: 0.427\n","[9,  9600] loss: 0.409\n","[9,  9800] loss: 0.451\n","[9, 10000] loss: 0.445\n","[9, 10200] loss: 0.433\n","[9, 10400] loss: 0.435\n","[9, 10600] loss: 0.429\n","[9, 10800] loss: 0.431\n","[9, 11000] loss: 0.488\n","[9, 11200] loss: 0.427\n","Accuracy of the network on the 12500 training images: 87 %\n","Accuracy of the network on the 12500 training images: 79 %\n","(Epoch 9 / 10) train acc: 0.879556; val_acc: 0.794800\n","[10,   200] loss: 0.368\n","[10,   400] loss: 0.340\n","[10,   600] loss: 0.311\n","[10,   800] loss: 0.369\n","[10,  1000] loss: 0.342\n","[10,  1200] loss: 0.348\n","[10,  1400] loss: 0.344\n","[10,  1600] loss: 0.411\n","[10,  1800] loss: 0.351\n","[10,  2000] loss: 0.326\n","[10,  2200] loss: 0.378\n","[10,  2400] loss: 0.366\n","[10,  2600] loss: 0.355\n","[10,  2800] loss: 0.337\n","[10,  3000] loss: 0.345\n","[10,  3200] loss: 0.387\n","[10,  3400] loss: 0.360\n","[10,  3600] loss: 0.400\n","[10,  3800] loss: 0.380\n","[10,  4000] loss: 0.351\n","[10,  4200] loss: 0.388\n","[10,  4400] loss: 0.390\n","[10,  4600] loss: 0.370\n","[10,  4800] loss: 0.446\n","[10,  5000] loss: 0.370\n","[10,  5200] loss: 0.383\n","[10,  5400] loss: 0.416\n","[10,  5600] loss: 0.384\n","[10,  5800] loss: 0.375\n","[10,  6000] loss: 0.367\n","[10,  6200] loss: 0.392\n","[10,  6400] loss: 0.411\n","[10,  6600] loss: 0.415\n","[10,  6800] loss: 0.332\n","[10,  7000] loss: 0.405\n","[10,  7200] loss: 0.414\n","[10,  7400] loss: 0.403\n","[10,  7600] loss: 0.402\n","[10,  7800] loss: 0.403\n","[10,  8000] loss: 0.357\n","[10,  8200] loss: 0.386\n","[10,  8400] loss: 0.397\n","[10,  8600] loss: 0.417\n","[10,  8800] loss: 0.398\n","[10,  9000] loss: 0.403\n","[10,  9200] loss: 0.424\n","[10,  9400] loss: 0.391\n","[10,  9600] loss: 0.455\n","[10,  9800] loss: 0.387\n","[10, 10000] loss: 0.406\n","[10, 10200] loss: 0.358\n","[10, 10400] loss: 0.399\n","[10, 10600] loss: 0.450\n","[10, 10800] loss: 0.432\n","[10, 11000] loss: 0.354\n","[10, 11200] loss: 0.461\n","Accuracy of the network on the 12500 training images: 89 %\n","Accuracy of the network on the 12500 training images: 80 %\n","(Epoch 10 / 10) train acc: 0.897422; val_acc: 0.803000\n","Best Val accuracy 0.803\n","Finished Training\n"]}]},{"cell_type":"code","source":["predict_accuracy(model_flood,testloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"0YMpq1k3XnmL","executionInfo":{"status":"ok","timestamp":1678788617797,"user_tz":420,"elapsed":19681,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"1c625bb5-b81d-40c9-f7cf-081ca3d38645"},"execution_count":92,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of the network on the 12500 training images: 79 %\n"]},{"output_type":"execute_result","data":{"text/plain":["(7974, 10000, 0.7974)"]},"metadata":{},"execution_count":92}]},{"cell_type":"code","source":["torch.save(model.state_dict(),'resnet_adam_flood_0.05_fully_trained.pt')"],"metadata":{"id":"4JaPxy0FXnjn","executionInfo":{"status":"ok","timestamp":1678788617798,"user_tz":420,"elapsed":22,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"execution_count":93,"outputs":[]},{"cell_type":"code","source":["torch.save(best_params,'Best_params_flood_0.05.pt') #f is something like 'resnet_nest_flood_bpoint15.pt'\n","model.load_state_dict(torch.load('Best_params_flood_0.05.pt'))\n","predict_accuracy(model_flood,testloader)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"YrwaUl8mXnhC","executionInfo":{"status":"ok","timestamp":1678788647424,"user_tz":420,"elapsed":20197,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"f2dbdf65-642f-4250-87ad-e3430eca1656"},"execution_count":94,"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of the network on the 12500 training images: 79 %\n"]},{"output_type":"execute_result","data":{"text/plain":["(7975, 10000, 0.7975)"]},"metadata":{},"execution_count":94}]},{"cell_type":"code","source":["plt.plot(loss_values_flood,label='Training')\n","plt.xlabel('Iterations')\n","plt.ylabel('Loss')\n","plt.legend();\n","plt.title('Resnet-20 Flood Loss with b=0.15')\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":639},"id":"OS8tQMveXneU","executionInfo":{"status":"ok","timestamp":1678788690684,"user_tz":420,"elapsed":2327,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"5e676ad4-6e40-4bb0-e01d-b40af01a4c77"},"execution_count":96,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Resnet-20 Flood Loss with b=0.15')"]},"metadata":{},"execution_count":96},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["plt.plot(accuracies_flood,label='Training');\n","plt.plot(val_accuracy_flood,label='Validation');\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","plt.legend();\n","plt.title('Resnet-20 Flood Accuracy with b=0.15')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":639},"id":"wiTQtnmlXnaH","executionInfo":{"status":"ok","timestamp":1678788703536,"user_tz":420,"elapsed":388,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"b471fd4f-10fe-4760-c87d-91f99687f3bb"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Text(0.5, 1.0, 'Resnet-20 Flood Accuracy with b=0.15')"]},"metadata":{},"execution_count":97},{"output_type":"display_data","data":{"text/plain":["<Figure size 720x720 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["fig, (axs1,axs2) = plt.subplots(1, 2, figsize=(15,5))\n","fig.suptitle('Resnet-20 Loss with b=0.15')\n","\n","                      \n","axs1.plot(loss_values_flood,label='Training')\n","plt.xlabel('Epochs')\n","plt.ylabel('Loss')\n","axs1.legend();\n","\n","axs2.plot(accuracies_flood,label='Training');\n","axs2.plot(val_accuracy_flood,label='Validation');\n","plt.xlabel('Epochs')\n","plt.ylabel('Accuracy')\n","axs2.legend();"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":370},"id":"BYjM6qMwYu6R","executionInfo":{"status":"ok","timestamp":1678788716013,"user_tz":420,"elapsed":518,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"371b0f08-824a-46b3-f156-41b7cdac98bc"},"execution_count":98,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x360 with 2 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[],"metadata":{"id":"1tslk_OrYu3T"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"v8_ZW2RHYu0e"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"0kW5aU_qYuyM"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"FqOLuvqwYuvT"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"zyK-MOfXYusb"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"FycGlFa6YupY"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"g9ZaKLRgYuma"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"kt57TAbSYuje"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"ILPtM6Z2YuhV"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Aswvu9vWYud8"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"qx3BhwxeYuba"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"238hTnKnYuYm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"s148LQimYuVq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"2wPyESypYuSy"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"2BW3mmaqXnWm"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"_ercmDIYYtUd"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"GdNFZMtoYtRW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"vtlxX0waYtOq"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"2S2JnYaAYtLg"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"WH6bEUChYtHU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"Gtf0jxjKYs-q"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"c-8pLPMmYsxw"},"execution_count":null,"outputs":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"RSL6od6Q_eMz","colab":{"base_uri":"https://localhost:8080/"},"outputId":"03ed7cde-2cc0-4526-f5c2-af6545733b28"},"outputs":[{"output_type":"stream","name":"stdout","text":["[1,  2000] loss: 2.299\n","[1,  4000] loss: 2.083\n","[1,  6000] loss: 2.021\n","[1,  8000] loss: 1.947\n","[1, 10000] loss: 1.862\n","[1, 12000] loss: 1.777\n","0.5\n","[2,  2000] loss: 1.707\n","[2,  4000] loss: 1.662\n","[2,  6000] loss: 1.592\n","[2,  8000] loss: 1.555\n","[2, 10000] loss: 1.522\n","[2, 12000] loss: 1.508\n","0.5\n","[3,  2000] loss: 1.421\n","[3,  4000] loss: 1.385\n","[3,  6000] loss: 1.355\n","[3,  8000] loss: 1.372\n","[3, 10000] loss: 1.355\n","[3, 12000] loss: 1.301\n","0.75\n","[4,  2000] loss: 1.242\n","[4,  4000] loss: 1.210\n","[4,  6000] loss: 1.224\n","[4,  8000] loss: 1.196\n","[4, 10000] loss: 1.199\n","[4, 12000] loss: 1.137\n","0.5\n","[5,  2000] loss: 1.109\n","[5,  4000] loss: 1.054\n","[5,  6000] loss: 1.098\n","[5,  8000] loss: 1.046\n","[5, 10000] loss: 1.045\n","[5, 12000] loss: 1.060\n","0.25\n","[6,  2000] loss: 0.986\n","[6,  4000] loss: 0.990\n","[6,  6000] loss: 0.971\n","[6,  8000] loss: 0.961\n","[6, 10000] loss: 1.012\n","[6, 12000] loss: 0.955\n","0.5\n","[7,  2000] loss: 0.893\n","[7,  4000] loss: 0.903\n","[7,  6000] loss: 0.904\n","[7,  8000] loss: 0.892\n","[7, 10000] loss: 0.925\n","[7, 12000] loss: 0.922\n","0.75\n","[8,  2000] loss: 0.841\n","[8,  4000] loss: 0.829\n","[8,  6000] loss: 0.872\n","[8,  8000] loss: 0.871\n","[8, 10000] loss: 0.839\n","[8, 12000] loss: 0.876\n","0.0\n","[9,  2000] loss: 0.807\n","[9,  4000] loss: 0.799\n","[9,  6000] loss: 0.795\n","[9,  8000] loss: 0.810\n","[9, 10000] loss: 0.818\n","[9, 12000] loss: 0.819\n","0.5\n","[10,  2000] loss: 0.724\n","[10,  4000] loss: 0.750\n","[10,  6000] loss: 0.746\n","[10,  8000] loss: 0.790\n","[10, 10000] loss: 0.745\n","[10, 12000] loss: 0.796\n"]}],"source":["######### This was the previous run. IGNORE THIS FOR NOW ############ \n","\n","\n","loss_values_flood = []\n","accuracies_flood = []\n","b=0.15\n","for epoch in range(10):  # loop over the dataset multiple times\n","    total =0\n","    correct = 0\n","\n","    running_loss = 0.0\n","    for i, data in enumerate(trainloader, 0):\n","        # get the inputs\n","        inputs, labels = data\n","\n","        # zero the parameter gradients\n","        optimizer_flood.zero_grad()\n","\n","        # forward + backward + optimize\n","        outputs = model_flood(inputs)\n","        loss = criterion(outputs, labels)\n","        flood = (loss-b).abs()+b \n","        flood.backward()\n","        optimizer_flood.step()\n","\n","        # print statistics\n","        running_loss += loss.item()\n","        loss_values_flood.append(flood.item())\n","        if i % 2000 == 1999:    # print every 2000 mini-batches\n","            print('[%d, %5d] loss: %.3f' %\n","                  (epoch + 1, i + 1, running_loss / 2000))\n","            running_loss = 0.0\n","    #caculate accuracy\n","    with torch.no_grad():\n","        _, predicted = torch.max(outputs.data, 1)\n","        total += labels.size(0)\n","        correct += (predicted == labels).sum().item()\n","        print(correct/total)\n","        accuracies_flood.append(correct/total)\n","\n","print('Finished Training')"]},{"cell_type":"code","execution_count":29,"metadata":{"id":"FExLj7xQ_eHx","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678587206228,"user_tz":480,"elapsed":120771,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"35c243cd-10bb-4671-9b03-fbf055d9104c"},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of the network on the 12500 training images: 75 %\n"]},{"output_type":"execute_result","data":{"text/plain":["(37858, 50000, 0.75716)"]},"metadata":{},"execution_count":29}],"source":["predict_accuracy(model_flood,trainloader)"]},{"cell_type":"code","execution_count":30,"metadata":{"id":"XbLWYWoS_eFO","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678587230828,"user_tz":480,"elapsed":24611,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}},"outputId":"1ce28b8f-ccdd-47e9-bd35-370feaceff70"},"outputs":[{"output_type":"stream","name":"stdout","text":["Accuracy of the network on the 12500 training images: 69 %\n"]},{"output_type":"execute_result","data":{"text/plain":["(6924, 10000, 0.6924)"]},"metadata":{},"execution_count":30}],"source":["predict_accuracy(model_flood,testloader)"]},{"cell_type":"code","execution_count":105,"metadata":{"id":"he5VTf-s_eCt","executionInfo":{"status":"ok","timestamp":1678788928342,"user_tz":420,"elapsed":838,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"outputs":[],"source":["# plt.subplot(1,2,1)\n","# plt.plot(loss_values_flood)\n","\n","# plt.subplot(1,2,2)\n","# plt.plot(accuracies_flood)"]},{"cell_type":"code","execution_count":99,"metadata":{"id":"wc-sUxEc_eAT","executionInfo":{"status":"ok","timestamp":1678788867256,"user_tz":420,"elapsed":236,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"}}},"outputs":[],"source":["# save_checkpoint(model_flood,'resnet_adam_floodpoint15.pt',loss_values_flood,'file_flood_adam.txt')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FvOLsA7C_d9r"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"FsrokG7k_d3b"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"aLb3suhd_duk"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"30HG6LAGYFt4"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"kYIeQB39YFq0"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"n5G6NVLfYFoJ"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"vPIoL97FYFlB"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"qlTanHQqYFiH"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"sQEB1F2aYFe7"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"A6fUyzhYYFbv"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"BytBA8LeYFXK"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":null,"metadata":{"id":"Xv5uL0LCYFNr"},"outputs":[],"source":["# "]},{"cell_type":"code","execution_count":null,"metadata":{"id":"O8GNstDEYFFQ"},"outputs":[],"source":[]},{"cell_type":"code","execution_count":100,"metadata":{"executionInfo":{"elapsed":203,"status":"ok","timestamp":1678788875406,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":420},"id":"BH1BBCVmKuJ2"},"outputs":[],"source":["# import torch.nn as nn\n","# import torch.nn.functional as F\n","\n","\n","# class CNNet(nn.Module):\n","#     def __init__(self):\n","#         # conv --> maxpool --> conv --> linear ---> linear ---> linear\n","#         super(CNNet, self).__init__()\n","#         self.conv1 = nn.Conv2d(3, 6, 5)\n","#         #docstring: torch.nn.Conv2d(in_channels, out_channels, kernel_size, stride=1, padding=0, dilation=1, groups=1, bias=True, padding_mode='zeros', device=None, dtype=None)\n","#         self.pool = nn.MaxPool2d(2, 2)\n","#         #docstring: torch.nn.MaxPool2d(kernel_size, stride=None, padding=0, dilation=1, return_indices=False, ceil_mode=False\n","#         self.conv2 = nn.Conv2d(6, 16, 5)\n","#         self.fc1 = nn.Linear(16 * 5 * 5, 120)\n","#         self.fc2 = nn.Linear(120, 84)\n","#         self.fc3 = nn.Linear(84, 10)\n","#         # need to figure out the dim checks\n","\n","#     def forward(self, x):\n","#         x = self.pool(F.relu(self.conv1(x))) #get raunak to check architecture\n","#         x = self.pool(F.relu(self.conv2(x)))\n","#         x = x.view(-1, 16 * 5 * 5) #Returns a new tensor with the same data as the self tensor but of a different shape.\n","#         x = F.relu(self.fc1(x))\n","#         x = F.relu(self.fc2(x))\n","#         x = self.fc3(x)\n","#         return x\n","\n","\n","# net = CNNet()"]},{"cell_type":"code","execution_count":102,"metadata":{"executionInfo":{"elapsed":509,"status":"ok","timestamp":1678788892368,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":420},"id":"OTwYXKz4Ku3A"},"outputs":[],"source":["# import torch.optim as optim\n","\n","# criterion = nn.CrossEntropyLoss()\n","#optimizer = optim.Adam(net.parameters(), lr=0.001)"]},{"cell_type":"code","execution_count":103,"metadata":{"executionInfo":{"elapsed":221,"status":"ok","timestamp":1678788898207,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":420},"id":"OvETlM9XNZu7"},"outputs":[],"source":["# for epoch in range(3):  # loop over the dataset multiple times\n","\n","#     running_loss = 0.0\n","#     for i, data in enumerate(trainloader, 0):\n","#         # get the inputs\n","#         inputs, labels = data\n","\n","#         # zero the parameter gradients\n","#         optimizer.zero_grad()\n","\n","#         # forward + backward + optimize\n","#         outputs = net(inputs)\n","#         loss = criterion(outputs, labels)\n","#         loss.backward()\n","#         optimizer.step()\n","\n","#         # print statistics\n","#         running_loss += loss.item()\n","#         if i % 2000 == 1999:    # print every 2000 mini-batches\n","#             print('[%d, %5d] loss: %.3f' %\n","#                   (epoch + 1, i + 1, running_loss / 2000))\n","#             running_loss = 0.0\n","\n","# print('Finished Training')"]},{"cell_type":"code","execution_count":104,"metadata":{"executionInfo":{"elapsed":526,"status":"ok","timestamp":1678788902675,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":420},"id":"Xm_opQcuNbAs"},"outputs":[],"source":["# dataiter = iter(testloader)\n","# images, labels = next(dataiter) #.next()\n","\n","# # print images\n","# imshow(torchvision.utils.make_grid(images))\n","# print('GroundTruth: ', ' '.join('%5s' % classes[labels[j]] for j in range(4)))\n","# outputs = net(images)"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"uJ2U6O66TOEn"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"CepWlGs2TOwC"},"source":["## Training Accuracy"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":45353,"status":"ok","timestamp":1678012352083,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":480},"id":"4CYIoJaIQkds","outputId":"bc29268e-bd82-4064-a474-61b0aed734c2"},"outputs":[{"name":"stdout","output_type":"stream","text":["Accuracy of the network on the 12500 training images: 60 %\n"]}],"source":["correct = 0\n","total = 0\n","with torch.no_grad(): #no grad so that we don't change the weights\n","    for data in trainloader:\n","        images, labels = data\n","        outputs = net(images)\n","        _, predicted = torch.max(outputs.data, 1)\n","        total += labels.size(0)\n","        correct += (predicted == labels).sum().item()\n","\n","print('Accuracy of the network on the 12500 training images: %d %%' % (\n","    100 * correct / total))"]},{"cell_type":"markdown","metadata":{"id":"xa3xDUm2TQwC"},"source":["## Test Accuracy"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9458,"status":"ok","timestamp":1678012361527,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":480},"id":"SIR9EDR3PbS0","outputId":"bfe0267d-5cd6-47d7-8097-fa20d76526b0"},"outputs":[{"name":"stdout","output_type":"stream","text":["Accuracy of the network on the 10000 test images: 57 %\n"]}],"source":["correct = 0\n","total = 0\n","with torch.no_grad(): #no grad so that we don't change the weights\n","    for data in testloader:\n","        images, labels = data\n","        outputs = net(images)\n","        _, predicted = torch.max(outputs.data, 1)\n","        total += labels.size(0)\n","        correct += (predicted == labels).sum().item()\n","\n","print('Accuracy of the network on the 10000 test images: %d %%' % (\n","    100 * correct / total))"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"lA-pgbOpRdDT"},"outputs":[],"source":[]},{"cell_type":"markdown","metadata":{"id":"evvdOzjCRkRL"},"source":["## Checking which classes underperformed and overperformed"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":10191,"status":"ok","timestamp":1678012371716,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":480},"id":"R_l2qBCWP2f0","outputId":"ed0ea9a9-cbeb-4ee9-a209-fc4bf270a9fb"},"outputs":[{"name":"stdout","output_type":"stream","text":["Accuracy of plane : 74 %\n","Accuracy of   car : 69 %\n","Accuracy of  bird : 27 %\n","Accuracy of   cat : 59 %\n","Accuracy of  deer : 47 %\n","Accuracy of   dog : 31 %\n","Accuracy of  frog : 62 %\n","Accuracy of horse : 62 %\n","Accuracy of  ship : 63 %\n","Accuracy of truck : 72 %\n"]}],"source":["class_correct = list(0. for i in range(10))\n","class_total = list(0. for i in range(10))\n","with torch.no_grad():\n","    for data in testloader:\n","        images, labels = data\n","        outputs = net(images)\n","        _, predicted = torch.max(outputs, 1)\n","        c = (predicted == labels).squeeze()\n","        for i in range(4):\n","            label = labels[i]\n","            class_correct[label] += c[i].item()\n","            class_total[label] += 1\n","\n","\n","for i in range(10):\n","    print('Accuracy of %5s : %2d %%' % (\n","        classes[i], 100 * class_correct[i] / class_total[i]))"]},{"cell_type":"markdown","metadata":{"id":"5UZMpD2BUd25"},"source":["## Using GPU and saving models"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":5310,"status":"ok","timestamp":1678012396678,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":480},"id":"fWPW2wKwP702","outputId":"b6fe908c-fc2a-4a32-fb19-599a77c835dd"},"outputs":[{"data":{"text/plain":["CNNet(\n","  (conv1): Conv2d(3, 6, kernel_size=(5, 5), stride=(1, 1))\n","  (pool): MaxPool2d(kernel_size=2, stride=2, padding=0, dilation=1, ceil_mode=False)\n","  (conv2): Conv2d(6, 16, kernel_size=(5, 5), stride=(1, 1))\n","  (fc1): Linear(in_features=400, out_features=120, bias=True)\n","  (fc2): Linear(in_features=120, out_features=84, bias=True)\n","  (fc3): Linear(in_features=84, out_features=10, bias=True)\n",")"]},"execution_count":13,"metadata":{},"output_type":"execute_result"}],"source":["net.to(device)\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":216,"status":"ok","timestamp":1678012573673,"user":{"displayName":"Simran Masand","userId":"06064358475585269629"},"user_tz":480},"id":"vvctIAtoVR3T","outputId":"28a98faf-8653-4d91-ea82-3df604c282ba"},"outputs":[{"data":{"text/plain":["<All keys matched successfully>"]},"execution_count":17,"metadata":{},"output_type":"execute_result"}],"source":["torch.save(net.state_dict(), 'cifar10-cnn.pth')\n","model2 = to_device(CNNet(), device)\n","model2.load_state_dict(torch.load('cifar10-cnn.pth'))\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"yxSwPCMwVaKO"},"outputs":[],"source":[]}],"metadata":{"accelerator":"GPU","colab":{"provenance":[],"collapsed_sections":["CepWlGs2TOwC","xa3xDUm2TQwC"],"toc_visible":true,"authorship_tag":"ABX9TyO5I6b5z+kS9FyQjyh5ogUe"},"gpuClass":"premium","kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"},"widgets":{"application/vnd.jupyter.widget-state+json":{"3640e8431d1b4fb38193e7e0e015743f":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_ca6ccb8f1b2b4541a2788b3b7ef32576","IPY_MODEL_b66e8e4ed3b046fabbeb115f9fdc2ca1","IPY_MODEL_94ecf0d688534293ab3ab891413b23b1"],"layout":"IPY_MODEL_47e229bc22824de18e1e77bc56402c27"}},"ca6ccb8f1b2b4541a2788b3b7ef32576":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_027b68ca64a1466cbd50dd19840bd900","placeholder":"​","style":"IPY_MODEL_aba30421fc9247da874cf71675c7c81f","value":"100%"}},"b66e8e4ed3b046fabbeb115f9fdc2ca1":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_ca1cf853fa1145fcbe550cf91f0474b7","max":170498071,"min":0,"orientation":"horizontal","style":"IPY_MODEL_588c91c5dda846009f6c2a5828f267d7","value":170498071}},"94ecf0d688534293ab3ab891413b23b1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f1bf6c5a4e65436096ff34a255f95c4a","placeholder":"​","style":"IPY_MODEL_899fb441b2cc4d51bb5428a1ebf543fd","value":" 170498071/170498071 [00:03&lt;00:00, 54299764.54it/s]"}},"47e229bc22824de18e1e77bc56402c27":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"027b68ca64a1466cbd50dd19840bd900":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"aba30421fc9247da874cf71675c7c81f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ca1cf853fa1145fcbe550cf91f0474b7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"588c91c5dda846009f6c2a5828f267d7":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"f1bf6c5a4e65436096ff34a255f95c4a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"899fb441b2cc4d51bb5428a1ebf543fd":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"367e46ebe93a4dfc9ab13841505b6954":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_c868bd0afae94ab9ad283d09b5d28f7d","IPY_MODEL_6362e206f2064e309bcb65b35b082ae4","IPY_MODEL_277cda53218f44e2b1ee23379f8d6c72"],"layout":"IPY_MODEL_53da0e3159964380828dbfade11ce928"}},"c868bd0afae94ab9ad283d09b5d28f7d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2d3faf9fe94d4fdcb9828e9f16b0ce8e","placeholder":"​","style":"IPY_MODEL_d0ba77f6996a48b995e3c0e2988ca697","value":"100%"}},"6362e206f2064e309bcb65b35b082ae4":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_806b6c3cd6764c17a1c3da8df8f62cd2","max":1139055,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d2d56099881d4a5db612c9f0f8894b86","value":1139055}},"277cda53218f44e2b1ee23379f8d6c72":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_f30c04f5ce5a43c88c08b178f81de9aa","placeholder":"​","style":"IPY_MODEL_b01f49faeae14daabf8c507e0758a0a4","value":" 1.09M/1.09M [00:00&lt;00:00, 1.93MB/s]"}},"53da0e3159964380828dbfade11ce928":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2d3faf9fe94d4fdcb9828e9f16b0ce8e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d0ba77f6996a48b995e3c0e2988ca697":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"806b6c3cd6764c17a1c3da8df8f62cd2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d2d56099881d4a5db612c9f0f8894b86":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"f30c04f5ce5a43c88c08b178f81de9aa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b01f49faeae14daabf8c507e0758a0a4":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"nbformat":4,"nbformat_minor":0}